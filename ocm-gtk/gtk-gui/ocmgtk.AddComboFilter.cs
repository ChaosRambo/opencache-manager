
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class AddComboFilter
	{
		private global::Gtk.HBox hbox2;
		
		private global::Gtk.Image image9;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.ScrolledWindow scrolledwindow1;
		
		private global::Gtk.TreeView conditionList;
		
		private global::Gtk.VButtonBox vbuttonbox1;
		
		private global::Gtk.Button AddConditionButton;
		
		private global::Gtk.Button addQuickFilterButton;
		
		private global::Gtk.Button editbutton;
		
		private global::Gtk.Button deleteButton;
		
		private global::Gtk.Button buttonCancel;
		
		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.AddComboFilter
			this.WidthRequest = 650;
			this.HeightRequest = 450;
			this.Name = "ocmgtk.AddComboFilter";
			this.Title = global::Mono.Unix.Catalog.GetString ("Create Combination Filter...");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.BorderWidth = ((uint)(6));
			this.Resizable = false;
			this.AllowGrow = false;
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child ocmgtk.AddComboFilter.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.Spacing = 6;
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.image9 = new global::Gtk.Image ();
			this.image9.Name = "image9";
			this.image9.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-info", global::Gtk.IconSize.Dnd);
			this.hbox2.Add (this.image9);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.image9]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Click <b>Add</b> to add a new filter condition, caches that meet any of the conditions\nwill be returned.");
			this.label1.UseMarkup = true;
			this.hbox2.Add (this.label1);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.label1]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			w1.Add (this.hbox2);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(w1 [this.hbox2]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.scrolledwindow1 = new global::Gtk.ScrolledWindow ();
			this.scrolledwindow1.CanFocus = true;
			this.scrolledwindow1.Name = "scrolledwindow1";
			this.scrolledwindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindow1.Gtk.Container+ContainerChild
			this.conditionList = new global::Gtk.TreeView ();
			this.conditionList.CanFocus = true;
			this.conditionList.Name = "conditionList";
			this.conditionList.HeadersVisible = false;
			this.scrolledwindow1.Add (this.conditionList);
			this.hbox1.Add (this.scrolledwindow1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.scrolledwindow1]));
			w6.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.vbuttonbox1 = new global::Gtk.VButtonBox ();
			this.vbuttonbox1.Name = "vbuttonbox1";
			this.vbuttonbox1.Spacing = 6;
			this.vbuttonbox1.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(3));
			// Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
			this.AddConditionButton = new global::Gtk.Button ();
			this.AddConditionButton.CanFocus = true;
			this.AddConditionButton.Name = "AddConditionButton";
			this.AddConditionButton.UseStock = true;
			this.AddConditionButton.UseUnderline = true;
			this.AddConditionButton.Label = "gtk-add";
			this.vbuttonbox1.Add (this.AddConditionButton);
			global::Gtk.ButtonBox.ButtonBoxChild w7 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1 [this.AddConditionButton]));
			w7.Expand = false;
			w7.Fill = false;
			w7.Padding = ((uint)(6));
			// Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
			this.addQuickFilterButton = new global::Gtk.Button ();
			this.addQuickFilterButton.CanFocus = true;
			this.addQuickFilterButton.Name = "addQuickFilterButton";
			this.addQuickFilterButton.UseUnderline = true;
			this.addQuickFilterButton.Label = global::Mono.Unix.Catalog.GetString ("Import _Quick Filter");
			this.vbuttonbox1.Add (this.addQuickFilterButton);
			global::Gtk.ButtonBox.ButtonBoxChild w8 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1 [this.addQuickFilterButton]));
			w8.Position = 1;
			w8.Expand = false;
			w8.Fill = false;
			// Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
			this.editbutton = new global::Gtk.Button ();
			this.editbutton.Sensitive = false;
			this.editbutton.CanFocus = true;
			this.editbutton.Name = "editbutton";
			this.editbutton.UseStock = true;
			this.editbutton.UseUnderline = true;
			this.editbutton.Label = "gtk-edit";
			this.vbuttonbox1.Add (this.editbutton);
			global::Gtk.ButtonBox.ButtonBoxChild w9 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1 [this.editbutton]));
			w9.Position = 2;
			w9.Expand = false;
			w9.Fill = false;
			// Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
			this.deleteButton = new global::Gtk.Button ();
			this.deleteButton.Sensitive = false;
			this.deleteButton.CanFocus = true;
			this.deleteButton.Name = "deleteButton";
			this.deleteButton.UseStock = true;
			this.deleteButton.UseUnderline = true;
			this.deleteButton.Label = "gtk-remove";
			this.vbuttonbox1.Add (this.deleteButton);
			global::Gtk.ButtonBox.ButtonBoxChild w10 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1 [this.deleteButton]));
			w10.Position = 3;
			w10.Expand = false;
			w10.Fill = false;
			this.hbox1.Add (this.vbuttonbox1);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.vbuttonbox1]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			w1.Add (this.hbox1);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(w1 [this.hbox1]));
			w12.Position = 1;
			// Internal child ocmgtk.AddComboFilter.ActionArea
			global::Gtk.HButtonBox w13 = this.ActionArea;
			w13.Name = "dialog1_ActionArea";
			w13.Spacing = 10;
			w13.BorderWidth = ((uint)(5));
			w13.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w14 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w13 [this.buttonCancel]));
			w14.Expand = false;
			w14.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget (this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w15 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w13 [this.buttonOk]));
			w15.Position = 1;
			w15.Expand = false;
			w15.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 662;
			this.DefaultHeight = 480;
			this.buttonOk.HasDefault = true;
			this.Show ();
			this.AddConditionButton.Clicked += new global::System.EventHandler (this.OnAddClick);
			this.addQuickFilterButton.Clicked += new global::System.EventHandler (this.OnImportQuickFilter);
			this.editbutton.Clicked += new global::System.EventHandler (this.OnEditClicked);
			this.deleteButton.Clicked += new global::System.EventHandler (this.OnRemoveClick);
			this.buttonCancel.Clicked += new global::System.EventHandler (this.OnCancelClicked);
			this.buttonOk.Clicked += new global::System.EventHandler (this.OnOkClicked);
		}
	}
}

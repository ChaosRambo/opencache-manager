
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class OCMMainWindow
	{
		private global::Gtk.UIManager UIManager;
		
		private global::Gtk.Action FileAction;
		
		private global::Gtk.Action EditAction;
		
		private global::Gtk.Action ViewAction;
		
		private global::Gtk.Action FilterAction;
		
		private global::Gtk.Action GoAction;
		
		private global::Gtk.Action BookmarksAction;
		
		private global::Gtk.Action CacheAction;
		
		private global::Gtk.Action WebAction;
		
		private global::Gtk.Action GPSAction;
		
		private global::Gtk.Action ToolsAction;
		
		private global::Gtk.Action HelpAction;
		
		private global::Gtk.Action NewAction;
		
		private global::Gtk.Action openAction;
		
		private global::Gtk.Action CompactDatabaseAction;
		
		private global::Gtk.Action quitAction;
		
		private global::Gtk.Action NewDatabaseAction;
		
		private global::Gtk.Action NewCacheAction;
		
		private global::Gtk.ToggleAction ShowNearbyCachesAction;
		
		private global::Gtk.Action ChildWaypointsAction;
		
		private global::Gtk.Action FieldNotesAction;
		
		private global::Gtk.RadioAction SelectedCacheOnlyAction;
		
		private global::Gtk.RadioAction AllWaypointsAction;
		
		private global::Gtk.Action printAction;
		
		private global::Gtk.Action LocationsAction;
		
		private global::Gtk.Action AddLocationAction;
		
		private global::Gtk.Action DeleteLocationAction;
		
		private global::Gtk.Action PanToCentreAction;
		
		private global::Gtk.Action PanToSelectedCacheAction;
		
		private global::Gtk.Action ZoomToSelectedCacheAction;
		
		private global::Gtk.Action AdvancedFiltersAction;
		
		private global::Gtk.Action CombinationFilterAction;
		
		private global::Gtk.Action ClearAdvancedFiltersAction;
		
		private global::Gtk.Action ClearComboFilterAction;
		
		private global::Gtk.Action ClearAllFiltersAction;
		
		private global::Gtk.Action QuickFilterAction;
		
		private global::Gtk.Action OCMWikiAction;
		
		private global::Gtk.Action OCMWebsiteAction;
		
		private global::Gtk.Action AboutAction;
		
		private global::Gtk.Action ChangeHistoryAction;
		
		private global::Gtk.Action CheckForUpdatesAction;
		
		private global::Gtk.Action OCMHomePageAction;
		
		private global::Gtk.Action GeocachingComAction;
		
		private global::Gtk.Action TerracachingComAction;
		
		private global::Gtk.Action OpencachingAction;
		
		private global::Gtk.Action GPSBabelHomePageAction;
		
		private global::Gtk.Action GPSDHomePageAction;
		
		private global::Gtk.Action HomePageAction;
		
		private global::Gtk.Action ViewMyProfileAction;
		
		private global::Gtk.Action MyAccountDetailsAction;
		
		private global::Gtk.Action CreatePocketQueriesAction;
		
		private global::Gtk.Action StatisticsAction;
		
		private global::Gtk.Action FindACacheAction;
		
		private global::Gtk.Action TCHomePageAction;
		
		private global::Gtk.Action ToDoListAction;
		
		private global::Gtk.Action TraditionalAction;
		
		private global::Gtk.Action LocationlessAction;
		
		private global::Gtk.Action ListOfCountrySitesAction;
		
		private global::Gtk.Action NavicacheComAction;
		
		private global::Gtk.Action NVHomePageAction;
		
		private global::Gtk.Action MyNavicacheAction;
		
		private global::Gtk.Action MarkAction;
		
		private global::Gtk.Action AddChildWaypointAction;
		
		private global::Gtk.Action CorrectedCoordinatesAction;
		
		private global::Gtk.Action ViewOnlineAction;
		
		private global::Gtk.Action SetSelectedCacheAsCentreAction;
		
		private global::Gtk.Action ModifyCacheAction;
		
		private global::Gtk.Action MarkFoundAction;
		
		private global::Gtk.Action MarkFirstToFindAction;
		
		private global::Gtk.Action MarkDidNotFindAction;
		
		private global::Gtk.Action MarkUnfoundAction;
		
		private global::Gtk.Action MarkDisabledAction;
		
		private global::Gtk.Action MarkArchivedAction;
		
		private global::Gtk.Action MarkAvailableAction;
		
		private global::Gtk.Action BookmarkListAction;
		
		private global::Gtk.Action AddAllUnfilteredCachesToAction;
		
		private global::Gtk.Action AddSelectedCacheToAction;
		
		private global::Gtk.Action RemoveSelectedCacheFromBookmarkListAction;
		
		private global::Gtk.Action CreateBookmarkListAction;
		
		private global::Gtk.Action DeleteBookmarkListAction;
		
		private global::Gtk.Action ZoomToCentreAction;
		
		private global::Gtk.Action ImportGPXLocZipAction;
		
		private global::Gtk.Action ImportDirectoryAction;
		
		private global::Gtk.Action SaveCurrentViewAsQuickFilterAction;
		
		private global::Gtk.Action DeleteQuickFilterAction;
		
		private global::Gtk.Action ExportAction;
		
		private global::Gtk.Action ExportGPXAction;
		
		private global::Gtk.Action ExportFindsGPXAction;
		
		private global::Gtk.Action ExportGarminPOIFileAction;
		
		private global::Gtk.Action CopyToAction;
		
		private global::Gtk.Action MoveToAction;
		
		private global::Gtk.Action DeleteAction;
		
		private global::Gtk.Action DeleteAllAction;
		
		private global::Gtk.Action DeselectAction;
		
		private global::Gtk.Action PreferencesAction;
		
		private global::Gtk.Action TransferCachesToLastUsedAction;
		
		private global::Gtk.Action ReceiveFieldNotesFromLastUsedAction;
		
		private global::Gtk.Action TransferCachesAction;
		
		private global::Gtk.Action ReceiveFieldNotesAction;
		
		private global::Gtk.Action AddGPSProfileAction;
		
		private global::Gtk.Action EditGPSProfileAction;
		
		private global::Gtk.Action DeleteGPSProfileAction;
		
		private global::Gtk.Action ViewAllInQLandkarteGTAction;
		
		private global::Gtk.Action ViewSelectedCacheInQLandkarteGTAction;
		
		private global::Gtk.Action ExternalToolsAction;
		
		private global::Gtk.Action ConfigureExternalToolsAction;
		
		private global::Gtk.Action LogFindAction;
		
		private global::Gtk.ToggleAction LogToFieldNotesFileAction;
		
		private global::Gtk.ToggleAction FullScreenAction;
		
		private global::Gtk.Action GrabImagesAction;
		
		private global::Gtk.ToggleAction MapPopupsAction;
		
		private global::Gtk.Action DatabaseCleanupAssistantAction;
		
		private global::Gtk.Action ReduceNumberOfLogsAction;
		
		private global::Gtk.Action GrabAllImagesAction;
		
		private global::Gtk.Action GrabImagesAction1;
		
		private global::Gtk.Action ImportOpenCachingAction;
		
		private global::Gtk.VBox mainWindowContents;
		
		private global::Gtk.MenuBar mainMenuBar;
		
		private global::Gtk.HPaned mainHPane;
		
		private global::ocmgtk.CacheListWidget cacheList;
		
		private global::Gtk.VPaned mainVPane;
		
		private global::ocmgtk.CacheInfoWidget ocmCacheInfo;
		
		private global::Gtk.VBox mapVBOX;
		
		private global::Gtk.HBox hbox14;
		
		private global::Gtk.Label spacerLabel;
		
		private global::Gtk.Button minButton;
		
		private global::Gtk.Image image250;
		
		private global::Gtk.Button mapDownButton;
		
		private global::Gtk.Image image38;
		
		private global::Gtk.Button restoreButton;
		
		private global::Gtk.Image image31;
		
		private global::Gtk.Button mapUpButton;
		
		private global::Gtk.Image image37;
		
		private global::ocmgtk.MapWidget ocmMapWidget;
		
		private global::Gtk.Statusbar mainStatusBar;
		
		private global::Gtk.Label LocationLabel;
		
		private global::Gtk.ProgressBar statusProgressBar;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.OCMMainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("_File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_File");
			w1.Add (this.FileAction, null);
			this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("_Edit"), null, null);
			this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Edit");
			w1.Add (this.EditAction, null);
			this.ViewAction = new global::Gtk.Action ("ViewAction", global::Mono.Unix.Catalog.GetString ("_View"), null, null);
			this.ViewAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_View");
			w1.Add (this.ViewAction, null);
			this.FilterAction = new global::Gtk.Action ("FilterAction", global::Mono.Unix.Catalog.GetString ("F_ilter"), null, null);
			this.FilterAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("F_ilter");
			w1.Add (this.FilterAction, null);
			this.GoAction = new global::Gtk.Action ("GoAction", global::Mono.Unix.Catalog.GetString ("_Go"), null, null);
			this.GoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Go");
			w1.Add (this.GoAction, null);
			this.BookmarksAction = new global::Gtk.Action ("BookmarksAction", global::Mono.Unix.Catalog.GetString ("_Bookmarks"), null, null);
			this.BookmarksAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Bookmarks");
			w1.Add (this.BookmarksAction, null);
			this.CacheAction = new global::Gtk.Action ("CacheAction", global::Mono.Unix.Catalog.GetString ("_Cache"), null, null);
			this.CacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Cache");
			w1.Add (this.CacheAction, null);
			this.WebAction = new global::Gtk.Action ("WebAction", global::Mono.Unix.Catalog.GetString ("_Web"), null, null);
			this.WebAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Web");
			w1.Add (this.WebAction, null);
			this.GPSAction = new global::Gtk.Action ("GPSAction", global::Mono.Unix.Catalog.GetString ("G_PS"), null, null);
			this.GPSAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("G_PS");
			w1.Add (this.GPSAction, null);
			this.ToolsAction = new global::Gtk.Action ("ToolsAction", global::Mono.Unix.Catalog.GetString ("_Tools"), null, null);
			this.ToolsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Tools");
			w1.Add (this.ToolsAction, null);
			this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("_Help"), null, null);
			this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Help");
			w1.Add (this.HelpAction, null);
			this.NewAction = new global::Gtk.Action ("NewAction", global::Mono.Unix.Catalog.GetString ("_New"), null, null);
			this.NewAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_New");
			w1.Add (this.NewAction, null);
			this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("_Open Database..."), null, "gtk-open");
			this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Open Database...");
			w1.Add (this.openAction, null);
			this.CompactDatabaseAction = new global::Gtk.Action ("CompactDatabaseAction", global::Mono.Unix.Catalog.GetString ("_Compact Database"), null, null);
			this.CompactDatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Compact Database");
			w1.Add (this.CompactDatabaseAction, null);
			this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("_Quit"), null, "gtk-quit");
			this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Quit");
			w1.Add (this.quitAction, null);
			this.NewDatabaseAction = new global::Gtk.Action ("NewDatabaseAction", global::Mono.Unix.Catalog.GetString ("_New Database..."), null, null);
			this.NewDatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_New Database...");
			w1.Add (this.NewDatabaseAction, "<Control><Mod2>n");
			this.NewCacheAction = new global::Gtk.Action ("NewCacheAction", global::Mono.Unix.Catalog.GetString ("New _Cache..."), null, null);
			this.NewCacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("New _Cache...");
			w1.Add (this.NewCacheAction, null);
			this.ShowNearbyCachesAction = new global::Gtk.ToggleAction ("ShowNearbyCachesAction", global::Mono.Unix.Catalog.GetString ("_Show Nearby Caches"), null, null);
			this.ShowNearbyCachesAction.Active = true;
			this.ShowNearbyCachesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Show Nearby Caches");
			w1.Add (this.ShowNearbyCachesAction, null);
			this.ChildWaypointsAction = new global::Gtk.Action ("ChildWaypointsAction", global::Mono.Unix.Catalog.GetString ("_Child Waypoints"), null, null);
			this.ChildWaypointsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Child Waypoints");
			w1.Add (this.ChildWaypointsAction, null);
			this.FieldNotesAction = new global::Gtk.Action ("FieldNotesAction", global::Mono.Unix.Catalog.GetString ("_Field Notes..."), null, null);
			this.FieldNotesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Field Notes...");
			w1.Add (this.FieldNotesAction, null);
			this.SelectedCacheOnlyAction = new global::Gtk.RadioAction ("SelectedCacheOnlyAction", global::Mono.Unix.Catalog.GetString ("Selected Cache Only"), null, null, 0);
			this.SelectedCacheOnlyAction.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.SelectedCacheOnlyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Selected Cache Only");
			w1.Add (this.SelectedCacheOnlyAction, null);
			this.AllWaypointsAction = new global::Gtk.RadioAction ("AllWaypointsAction", global::Mono.Unix.Catalog.GetString ("All Waypoints"), null, null, 0);
			this.AllWaypointsAction.Group = this.SelectedCacheOnlyAction.Group;
			this.AllWaypointsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("All Waypoints");
			w1.Add (this.AllWaypointsAction, null);
			this.printAction = new global::Gtk.Action ("printAction", global::Mono.Unix.Catalog.GetString ("_Print"), null, "gtk-print");
			this.printAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Print");
			w1.Add (this.printAction, "<Control><Mod2>p");
			this.LocationsAction = new global::Gtk.Action ("LocationsAction", global::Mono.Unix.Catalog.GetString ("_Locations"), null, null);
			this.LocationsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Locations");
			w1.Add (this.LocationsAction, null);
			this.AddLocationAction = new global::Gtk.Action ("AddLocationAction", global::Mono.Unix.Catalog.GetString ("_Add Location..."), null, null);
			this.AddLocationAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Add Location...");
			w1.Add (this.AddLocationAction, null);
			this.DeleteLocationAction = new global::Gtk.Action ("DeleteLocationAction", global::Mono.Unix.Catalog.GetString ("_Delete Location..."), null, null);
			this.DeleteLocationAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Manage Locations...");
			w1.Add (this.DeleteLocationAction, null);
			this.PanToCentreAction = new global::Gtk.Action ("PanToCentreAction", global::Mono.Unix.Catalog.GetString ("_Pan to Centre"), null, null);
			this.PanToCentreAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Pan Map to Centre");
			w1.Add (this.PanToCentreAction, "<Shift><Alt><Mod2>Home");
			this.PanToSelectedCacheAction = new global::Gtk.Action ("PanToSelectedCacheAction", global::Mono.Unix.Catalog.GetString ("Pan to _Selected Cache"), null, null);
			this.PanToSelectedCacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Pan Map to _Selected Cache");
			w1.Add (this.PanToSelectedCacheAction, null);
			this.ZoomToSelectedCacheAction = new global::Gtk.Action ("ZoomToSelectedCacheAction", global::Mono.Unix.Catalog.GetString ("_Zoom to Selected Cache"), null, null);
			this.ZoomToSelectedCacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Zoom Map to Selected Cache");
			w1.Add (this.ZoomToSelectedCacheAction, null);
			this.AdvancedFiltersAction = new global::Gtk.Action ("AdvancedFiltersAction", global::Mono.Unix.Catalog.GetString ("_Advanced Filters..."), null, null);
			this.AdvancedFiltersAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Advanced Filters...");
			w1.Add (this.AdvancedFiltersAction, "<Control><Mod2>f");
			this.CombinationFilterAction = new global::Gtk.Action ("CombinationFilterAction", global::Mono.Unix.Catalog.GetString ("C_ombination Filter..."), null, null);
			this.CombinationFilterAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("C_ombination Filter...");
			w1.Add (this.CombinationFilterAction, "<Control><Alt><Mod2>c");
			this.ClearAdvancedFiltersAction = new global::Gtk.Action ("ClearAdvancedFiltersAction", global::Mono.Unix.Catalog.GetString ("_Clear Advanced Filters..."), null, null);
			this.ClearAdvancedFiltersAction.Sensitive = false;
			this.ClearAdvancedFiltersAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Clear Advanced Filters...");
			w1.Add (this.ClearAdvancedFiltersAction, null);
			this.ClearComboFilterAction = new global::Gtk.Action ("ClearComboFilterAction", global::Mono.Unix.Catalog.GetString ("C_lear Combo Filter"), null, null);
			this.ClearComboFilterAction.Sensitive = false;
			this.ClearComboFilterAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("C_lear Combo Filter");
			w1.Add (this.ClearComboFilterAction, null);
			this.ClearAllFiltersAction = new global::Gtk.Action ("ClearAllFiltersAction", global::Mono.Unix.Catalog.GetString ("Clear _All Filters"), null, null);
			this.ClearAllFiltersAction.Sensitive = false;
			this.ClearAllFiltersAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Clear _All Filters");
			w1.Add (this.ClearAllFiltersAction, null);
			this.QuickFilterAction = new global::Gtk.Action ("QuickFilterAction", global::Mono.Unix.Catalog.GetString ("_Quick Filter"), null, null);
			this.QuickFilterAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Quick Filter");
			w1.Add (this.QuickFilterAction, null);
			this.OCMWikiAction = new global::Gtk.Action ("OCMWikiAction", global::Mono.Unix.Catalog.GetString ("_OCM Wiki..."), null, null);
			this.OCMWikiAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_OCM Wiki...");
			w1.Add (this.OCMWikiAction, null);
			this.OCMWebsiteAction = new global::Gtk.Action ("OCMWebsiteAction", global::Mono.Unix.Catalog.GetString ("OCM _Website..."), null, null);
			this.OCMWebsiteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("OCM _Website...");
			w1.Add (this.OCMWebsiteAction, null);
			this.AboutAction = new global::Gtk.Action ("AboutAction", global::Mono.Unix.Catalog.GetString ("_About"), null, null);
			this.AboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_About");
			w1.Add (this.AboutAction, null);
			this.ChangeHistoryAction = new global::Gtk.Action ("ChangeHistoryAction", global::Mono.Unix.Catalog.GetString ("_Change History..."), null, null);
			this.ChangeHistoryAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Change History...");
			w1.Add (this.ChangeHistoryAction, null);
			this.CheckForUpdatesAction = new global::Gtk.Action ("CheckForUpdatesAction", global::Mono.Unix.Catalog.GetString ("Check For _Updates..."), null, null);
			this.CheckForUpdatesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Check For _Updates...");
			w1.Add (this.CheckForUpdatesAction, null);
			this.OCMHomePageAction = new global::Gtk.Action ("OCMHomePageAction", global::Mono.Unix.Catalog.GetString ("_OCM Home Page..."), null, null);
			this.OCMHomePageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_OCM Home Page...");
			w1.Add (this.OCMHomePageAction, null);
			this.GeocachingComAction = new global::Gtk.Action ("GeocachingComAction", global::Mono.Unix.Catalog.GetString ("_Geocaching.com"), null, null);
			this.GeocachingComAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Geocaching.com");
			w1.Add (this.GeocachingComAction, null);
			this.TerracachingComAction = new global::Gtk.Action ("TerracachingComAction", global::Mono.Unix.Catalog.GetString ("_Terracaching.com"), null, null);
			this.TerracachingComAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Terracaching.com");
			w1.Add (this.TerracachingComAction, null);
			this.OpencachingAction = new global::Gtk.Action ("OpencachingAction", global::Mono.Unix.Catalog.GetString ("O_pencaching"), null, null);
			this.OpencachingAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("O_pencaching");
			w1.Add (this.OpencachingAction, null);
			this.GPSBabelHomePageAction = new global::Gtk.Action ("GPSBabelHomePageAction", global::Mono.Unix.Catalog.GetString ("G_PSBabel Home Page..."), null, null);
			this.GPSBabelHomePageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("G_PSBabel Home Page...");
			w1.Add (this.GPSBabelHomePageAction, null);
			this.GPSDHomePageAction = new global::Gtk.Action ("GPSDHomePageAction", global::Mono.Unix.Catalog.GetString ("GPS_D Home Page..."), null, null);
			this.GPSDHomePageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("GPS_D Home Page...");
			w1.Add (this.GPSDHomePageAction, null);
			this.HomePageAction = new global::Gtk.Action ("HomePageAction", global::Mono.Unix.Catalog.GetString ("_Home Page..."), null, null);
			this.HomePageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Home Page...");
			w1.Add (this.HomePageAction, null);
			this.ViewMyProfileAction = new global::Gtk.Action ("ViewMyProfileAction", global::Mono.Unix.Catalog.GetString ("_View My Profile..."), null, null);
			this.ViewMyProfileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_View My Profile...");
			w1.Add (this.ViewMyProfileAction, null);
			this.MyAccountDetailsAction = new global::Gtk.Action ("MyAccountDetailsAction", global::Mono.Unix.Catalog.GetString ("_My Account Details..."), null, null);
			this.MyAccountDetailsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_My Account Details...");
			w1.Add (this.MyAccountDetailsAction, null);
			this.CreatePocketQueriesAction = new global::Gtk.Action ("CreatePocketQueriesAction", global::Mono.Unix.Catalog.GetString ("_Create Pocket Queries..."), null, null);
			this.CreatePocketQueriesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Create Pocket Queries...");
			w1.Add (this.CreatePocketQueriesAction, null);
			this.StatisticsAction = new global::Gtk.Action ("StatisticsAction", global::Mono.Unix.Catalog.GetString ("_Statistics..."), null, null);
			this.StatisticsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Statistics...");
			w1.Add (this.StatisticsAction, null);
			this.FindACacheAction = new global::Gtk.Action ("FindACacheAction", global::Mono.Unix.Catalog.GetString ("_Find a Cache..."), null, null);
			this.FindACacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Find a Cache...");
			w1.Add (this.FindACacheAction, null);
			this.TCHomePageAction = new global::Gtk.Action ("TCHomePageAction", global::Mono.Unix.Catalog.GetString ("_Home Page..."), null, null);
			this.TCHomePageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Home Page...");
			w1.Add (this.TCHomePageAction, null);
			this.ToDoListAction = new global::Gtk.Action ("ToDoListAction", global::Mono.Unix.Catalog.GetString ("To _Do List"), null, null);
			this.ToDoListAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("To _Do List");
			w1.Add (this.ToDoListAction, null);
			this.TraditionalAction = new global::Gtk.Action ("TraditionalAction", global::Mono.Unix.Catalog.GetString ("_Traditional..."), null, null);
			this.TraditionalAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Traditional...");
			w1.Add (this.TraditionalAction, null);
			this.LocationlessAction = new global::Gtk.Action ("LocationlessAction", global::Mono.Unix.Catalog.GetString ("_Locationless..."), null, null);
			this.LocationlessAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Locationless...");
			w1.Add (this.LocationlessAction, null);
			this.ListOfCountrySitesAction = new global::Gtk.Action ("ListOfCountrySitesAction", global::Mono.Unix.Catalog.GetString ("_List Of Country Sites"), null, null);
			this.ListOfCountrySitesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_List Of Country Sites");
			w1.Add (this.ListOfCountrySitesAction, null);
			this.NavicacheComAction = new global::Gtk.Action ("NavicacheComAction", global::Mono.Unix.Catalog.GetString ("_Navicache.com"), null, null);
			this.NavicacheComAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Navicache.com");
			w1.Add (this.NavicacheComAction, null);
			this.NVHomePageAction = new global::Gtk.Action ("NVHomePageAction", global::Mono.Unix.Catalog.GetString ("_Home Page..."), null, null);
			this.NVHomePageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Home Page...");
			w1.Add (this.NVHomePageAction, null);
			this.MyNavicacheAction = new global::Gtk.Action ("MyNavicacheAction", global::Mono.Unix.Catalog.GetString ("_My Navicache..."), null, null);
			this.MyNavicacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_My Navicache...");
			w1.Add (this.MyNavicacheAction, null);
			this.MarkAction = new global::Gtk.Action ("MarkAction", global::Mono.Unix.Catalog.GetString ("_Mark"), null, null);
			this.MarkAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Mark");
			w1.Add (this.MarkAction, null);
			this.AddChildWaypointAction = new global::Gtk.Action ("AddChildWaypointAction", global::Mono.Unix.Catalog.GetString ("Add Child _Waypoint..."), null, null);
			this.AddChildWaypointAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Add Child _Waypoint...");
			w1.Add (this.AddChildWaypointAction, "<Control><Mod2>w");
			this.CorrectedCoordinatesAction = new global::Gtk.Action ("CorrectedCoordinatesAction", global::Mono.Unix.Catalog.GetString ("_Corrected Coordinates..."), null, null);
			this.CorrectedCoordinatesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Corrected Coordinates...");
			w1.Add (this.CorrectedCoordinatesAction, "<Control><Mod2>r");
			this.ViewOnlineAction = new global::Gtk.Action ("ViewOnlineAction", global::Mono.Unix.Catalog.GetString ("_View Online..."), null, null);
			this.ViewOnlineAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_View Online...");
			w1.Add (this.ViewOnlineAction, null);
			this.SetSelectedCacheAsCentreAction = new global::Gtk.Action ("SetSelectedCacheAsCentreAction", global::Mono.Unix.Catalog.GetString ("_Set Selected Cache As Centre"), null, null);
			this.SetSelectedCacheAsCentreAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Set Selected Cache As Centre");
			w1.Add (this.SetSelectedCacheAsCentreAction, null);
			this.ModifyCacheAction = new global::Gtk.Action ("ModifyCacheAction", global::Mono.Unix.Catalog.GetString ("M_odify Cache"), null, null);
			this.ModifyCacheAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("M_odify Cache");
			w1.Add (this.ModifyCacheAction, "<Control><Mod2>m");
			this.MarkFoundAction = new global::Gtk.Action ("MarkFoundAction", global::Mono.Unix.Catalog.GetString ("Mark _Found"), null, null);
			this.MarkFoundAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark _Found");
			w1.Add (this.MarkFoundAction, null);
			this.MarkFirstToFindAction = new global::Gtk.Action ("MarkFirstToFindAction", global::Mono.Unix.Catalog.GetString ("Mark F_irst To Find"), null, null);
			this.MarkFirstToFindAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark F_irst To Find");
			w1.Add (this.MarkFirstToFindAction, null);
			this.MarkDidNotFindAction = new global::Gtk.Action ("MarkDidNotFindAction", global::Mono.Unix.Catalog.GetString ("Mark Did _Not Find"), null, null);
			this.MarkDidNotFindAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark Did _Not Find");
			w1.Add (this.MarkDidNotFindAction, null);
			this.MarkUnfoundAction = new global::Gtk.Action ("MarkUnfoundAction", global::Mono.Unix.Catalog.GetString ("Mark _Unfound"), null, null);
			this.MarkUnfoundAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark _Unfound");
			w1.Add (this.MarkUnfoundAction, null);
			this.MarkDisabledAction = new global::Gtk.Action ("MarkDisabledAction", global::Mono.Unix.Catalog.GetString ("Mark _Disabled"), null, null);
			this.MarkDisabledAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark _Disabled");
			w1.Add (this.MarkDisabledAction, null);
			this.MarkArchivedAction = new global::Gtk.Action ("MarkArchivedAction", global::Mono.Unix.Catalog.GetString ("Mark _Archived"), null, null);
			this.MarkArchivedAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark _Archived");
			w1.Add (this.MarkArchivedAction, null);
			this.MarkAvailableAction = new global::Gtk.Action ("MarkAvailableAction", global::Mono.Unix.Catalog.GetString ("Mark A_vailable"), null, null);
			this.MarkAvailableAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Mark A_vailable");
			w1.Add (this.MarkAvailableAction, null);
			this.BookmarkListAction = new global::Gtk.Action ("BookmarkListAction", global::Mono.Unix.Catalog.GetString ("Bookmark _List"), null, null);
			this.BookmarkListAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Bookmark _List");
			w1.Add (this.BookmarkListAction, null);
			this.AddAllUnfilteredCachesToAction = new global::Gtk.Action ("AddAllUnfilteredCachesToAction", global::Mono.Unix.Catalog.GetString ("_Add All Unfiltered Caches to"), null, null);
			this.AddAllUnfilteredCachesToAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Add All Unfiltered Caches to");
			w1.Add (this.AddAllUnfilteredCachesToAction, null);
			this.AddSelectedCacheToAction = new global::Gtk.Action ("AddSelectedCacheToAction", global::Mono.Unix.Catalog.GetString ("Add _Selected Cache to"), null, null);
			this.AddSelectedCacheToAction.Sensitive = false;
			this.AddSelectedCacheToAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Add _Selected Cache to");
			w1.Add (this.AddSelectedCacheToAction, null);
			this.RemoveSelectedCacheFromBookmarkListAction = new global::Gtk.Action ("RemoveSelectedCacheFromBookmarkListAction", global::Mono.Unix.Catalog.GetString ("_Remove Selected Cache from Bookmark List"), null, null);
			this.RemoveSelectedCacheFromBookmarkListAction.Sensitive = false;
			this.RemoveSelectedCacheFromBookmarkListAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Remove Selected Cache from Bookmark List");
			w1.Add (this.RemoveSelectedCacheFromBookmarkListAction, null);
			this.CreateBookmarkListAction = new global::Gtk.Action ("CreateBookmarkListAction", global::Mono.Unix.Catalog.GetString ("_Create Bookmark List..."), null, null);
			this.CreateBookmarkListAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Create Bookmark List");
			w1.Add (this.CreateBookmarkListAction, null);
			this.DeleteBookmarkListAction = new global::Gtk.Action ("DeleteBookmarkListAction", global::Mono.Unix.Catalog.GetString ("_Delete Bookmark List..."), null, null);
			this.DeleteBookmarkListAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Manage Bookmark Lists...");
			w1.Add (this.DeleteBookmarkListAction, null);
			this.ZoomToCentreAction = new global::Gtk.Action ("ZoomToCentreAction", global::Mono.Unix.Catalog.GetString ("Zoom to _Centre"), null, null);
			this.ZoomToCentreAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Zoom to _Centre");
			w1.Add (this.ZoomToCentreAction, "<Alt><Mod2>Home");
			this.ImportGPXLocZipAction = new global::Gtk.Action ("ImportGPXLocZipAction", global::Mono.Unix.Catalog.GetString ("_Import GPX/Loc/Zip..."), null, null);
			this.ImportGPXLocZipAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Import GPX/Loc/Zip...");
			w1.Add (this.ImportGPXLocZipAction, null);
			this.ImportDirectoryAction = new global::Gtk.Action ("ImportDirectoryAction", global::Mono.Unix.Catalog.GetString ("_Import Directory..."), null, null);
			this.ImportDirectoryAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Import Directory...");
			w1.Add (this.ImportDirectoryAction, null);
			this.SaveCurrentViewAsQuickFilterAction = new global::Gtk.Action ("SaveCurrentViewAsQuickFilterAction", global::Mono.Unix.Catalog.GetString ("_Save Current View as QuickFilter..."), null, null);
			this.SaveCurrentViewAsQuickFilterAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Save Current View as QuickFilter...");
			w1.Add (this.SaveCurrentViewAsQuickFilterAction, null);
			this.DeleteQuickFilterAction = new global::Gtk.Action ("DeleteQuickFilterAction", global::Mono.Unix.Catalog.GetString ("_Delete Quick Filter..."), null, null);
			this.DeleteQuickFilterAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Delete Quick Filter...");
			w1.Add (this.DeleteQuickFilterAction, null);
			this.ExportAction = new global::Gtk.Action ("ExportAction", global::Mono.Unix.Catalog.GetString ("_Export"), null, null);
			this.ExportAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Export");
			w1.Add (this.ExportAction, null);
			this.ExportGPXAction = new global::Gtk.Action ("ExportGPXAction", global::Mono.Unix.Catalog.GetString ("_Export GPX..."), null, null);
			this.ExportGPXAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Export GPX...");
			w1.Add (this.ExportGPXAction, "<Control><Mod2>s");
			this.ExportFindsGPXAction = new global::Gtk.Action ("ExportFindsGPXAction", global::Mono.Unix.Catalog.GetString ("Export _Finds GPX..."), null, null);
			this.ExportFindsGPXAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Export _Finds GPX...");
			w1.Add (this.ExportFindsGPXAction, null);
			this.ExportGarminPOIFileAction = new global::Gtk.Action ("ExportGarminPOIFileAction", global::Mono.Unix.Catalog.GetString ("Export _Garmin POI File..."), null, null);
			this.ExportGarminPOIFileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Export _Garmin POI File...");
			w1.Add (this.ExportGarminPOIFileAction, null);
			this.CopyToAction = new global::Gtk.Action ("CopyToAction", global::Mono.Unix.Catalog.GetString ("_Copy To..."), null, null);
			this.CopyToAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Copy To...");
			w1.Add (this.CopyToAction, null);
			this.MoveToAction = new global::Gtk.Action ("MoveToAction", global::Mono.Unix.Catalog.GetString ("_Move To..."), null, null);
			this.MoveToAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Move To...");
			w1.Add (this.MoveToAction, null);
			this.DeleteAction = new global::Gtk.Action ("DeleteAction", global::Mono.Unix.Catalog.GetString ("_Delete..."), null, null);
			this.DeleteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Delete...");
			w1.Add (this.DeleteAction, null);
			this.DeleteAllAction = new global::Gtk.Action ("DeleteAllAction", global::Mono.Unix.Catalog.GetString ("Delete _All..."), null, null);
			this.DeleteAllAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Delete _All...");
			w1.Add (this.DeleteAllAction, null);
			this.DeselectAction = new global::Gtk.Action ("DeselectAction", global::Mono.Unix.Catalog.GetString ("De_select"), null, null);
			this.DeselectAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("De_select");
			w1.Add (this.DeselectAction, null);
			this.PreferencesAction = new global::Gtk.Action ("PreferencesAction", global::Mono.Unix.Catalog.GetString ("_Preferences..."), null, null);
			this.PreferencesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Preferences...");
			w1.Add (this.PreferencesAction, null);
			this.TransferCachesToLastUsedAction = new global::Gtk.Action ("TransferCachesToLastUsedAction", global::Mono.Unix.Catalog.GetString ("Transfer _Caches to Last Used..."), null, null);
			this.TransferCachesToLastUsedAction.Sensitive = false;
			this.TransferCachesToLastUsedAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Transfer _Caches to Last Used...");
			w1.Add (this.TransferCachesToLastUsedAction, "<Control><Mod2>t");
			this.ReceiveFieldNotesFromLastUsedAction = new global::Gtk.Action ("ReceiveFieldNotesFromLastUsedAction", global::Mono.Unix.Catalog.GetString ("Receive _Field Notes from Last Used..."), null, null);
			this.ReceiveFieldNotesFromLastUsedAction.Sensitive = false;
			this.ReceiveFieldNotesFromLastUsedAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Receive _Field Notes from Last Used...");
			w1.Add (this.ReceiveFieldNotesFromLastUsedAction, "<Control><Alt><Mod2>r");
			this.TransferCachesAction = new global::Gtk.Action ("TransferCachesAction", global::Mono.Unix.Catalog.GetString ("_Transfer Caches..."), null, null);
			this.TransferCachesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Transfer Caches...");
			w1.Add (this.TransferCachesAction, null);
			this.ReceiveFieldNotesAction = new global::Gtk.Action ("ReceiveFieldNotesAction", global::Mono.Unix.Catalog.GetString ("_Receive Field Notes..."), null, null);
			this.ReceiveFieldNotesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Receive Field Notes...");
			w1.Add (this.ReceiveFieldNotesAction, null);
			this.AddGPSProfileAction = new global::Gtk.Action ("AddGPSProfileAction", global::Mono.Unix.Catalog.GetString ("_Add GPS Profile..."), null, null);
			this.AddGPSProfileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Add GPS Profile...");
			w1.Add (this.AddGPSProfileAction, null);
			this.EditGPSProfileAction = new global::Gtk.Action ("EditGPSProfileAction", global::Mono.Unix.Catalog.GetString ("_Edit GPS Profile..."), null, null);
			this.EditGPSProfileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Edit GPS Profile...");
			w1.Add (this.EditGPSProfileAction, null);
			this.DeleteGPSProfileAction = new global::Gtk.Action ("DeleteGPSProfileAction", global::Mono.Unix.Catalog.GetString ("_Delete GPS Profile..."), null, null);
			this.DeleteGPSProfileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Delete GPS Profile...");
			w1.Add (this.DeleteGPSProfileAction, null);
			this.ViewAllInQLandkarteGTAction = new global::Gtk.Action ("ViewAllInQLandkarteGTAction", global::Mono.Unix.Catalog.GetString ("_View All in QLandkarte GT..."), null, null);
			this.ViewAllInQLandkarteGTAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_View All in QLandkarte GT...");
			w1.Add (this.ViewAllInQLandkarteGTAction, null);
			this.ViewSelectedCacheInQLandkarteGTAction = new global::Gtk.Action ("ViewSelectedCacheInQLandkarteGTAction", global::Mono.Unix.Catalog.GetString ("View _Selected Cache in QLandkarte GT..."), null, null);
			this.ViewSelectedCacheInQLandkarteGTAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("View _Selected Cache in QLandkarte GT...");
			w1.Add (this.ViewSelectedCacheInQLandkarteGTAction, null);
			this.ExternalToolsAction = new global::Gtk.Action ("ExternalToolsAction", global::Mono.Unix.Catalog.GetString ("_External Tools"), null, null);
			this.ExternalToolsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_External Tools");
			w1.Add (this.ExternalToolsAction, null);
			this.ConfigureExternalToolsAction = new global::Gtk.Action ("ConfigureExternalToolsAction", global::Mono.Unix.Catalog.GetString ("_Configure External Tools"), null, null);
			this.ConfigureExternalToolsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Configure External Tools");
			w1.Add (this.ConfigureExternalToolsAction, null);
			this.LogFindAction = new global::Gtk.Action ("LogFindAction", global::Mono.Unix.Catalog.GetString ("_Log Find..."), null, null);
			this.LogFindAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Log Find...");
			w1.Add (this.LogFindAction, null);
			this.LogToFieldNotesFileAction = new global::Gtk.ToggleAction ("LogToFieldNotesFileAction", global::Mono.Unix.Catalog.GetString ("Log to _Field Notes File"), null, null);
			this.LogToFieldNotesFileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Log to _Field Notes File");
			w1.Add (this.LogToFieldNotesFileAction, null);
			this.FullScreenAction = new global::Gtk.ToggleAction ("FullScreenAction", global::Mono.Unix.Catalog.GetString ("Full _Screen"), null, null);
			this.FullScreenAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Full _Screen");
			w1.Add (this.FullScreenAction, "<Mod2>F11");
			this.GrabImagesAction = new global::Gtk.Action ("GrabImagesAction", global::Mono.Unix.Catalog.GetString ("_Grab Images..."), null, null);
			this.GrabImagesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Grab Images...");
			w1.Add (this.GrabImagesAction, null);
			this.MapPopupsAction = new global::Gtk.ToggleAction ("MapPopupsAction", global::Mono.Unix.Catalog.GetString ("_Map Popups"), null, null);
			this.MapPopupsAction.Active = true;
			this.MapPopupsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Map Popups");
			w1.Add (this.MapPopupsAction, null);
			this.DatabaseCleanupAssistantAction = new global::Gtk.Action ("DatabaseCleanupAssistantAction", global::Mono.Unix.Catalog.GetString ("Database Cleanup Assistant..."), null, null);
			this.DatabaseCleanupAssistantAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Database Cleanup Assistant...");
			w1.Add (this.DatabaseCleanupAssistantAction, null);
			this.ReduceNumberOfLogsAction = new global::Gtk.Action ("ReduceNumberOfLogsAction", global::Mono.Unix.Catalog.GetString ("_Reduce Number of Logs..."), null, null);
			this.ReduceNumberOfLogsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Reduce Number of Logs...");
			w1.Add (this.ReduceNumberOfLogsAction, null);
			this.GrabAllImagesAction = new global::Gtk.Action ("GrabAllImagesAction", global::Mono.Unix.Catalog.GetString ("Grab All Images..."), null, null);
			this.GrabAllImagesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Grab All Images...");
			w1.Add (this.GrabAllImagesAction, null);
			this.GrabImagesAction1 = new global::Gtk.Action ("GrabImagesAction1", global::Mono.Unix.Catalog.GetString ("Grab Images..."), null, null);
			this.GrabImagesAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Grab Images...");
			w1.Add (this.GrabImagesAction1, null);
			this.ImportOpenCachingAction = new global::Gtk.Action ("ImportOpenCachingAction", global::Mono.Unix.Catalog.GetString ("_Import OpenCaching"), null, null);
			this.ImportOpenCachingAction.HideIfEmpty = false;
			this.ImportOpenCachingAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Import OpenCaching");
			w1.Add (this.ImportOpenCachingAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "ocmgtk.OCMMainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("OCM");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.OCMLogoSmall.svg");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child ocmgtk.OCMMainWindow.Gtk.Container+ContainerChild
			this.mainWindowContents = new global::Gtk.VBox ();
			this.mainWindowContents.Name = "mainWindowContents";
			this.mainWindowContents.Spacing = 6;
			// Container child mainWindowContents.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><menubar name='mainMenuBar'><menu name='FileAction' action='FileAction'><menu name='NewAction' action='NewAction'><menuitem name='NewDatabaseAction' action='NewDatabaseAction'/><menuitem name='NewCacheAction' action='NewCacheAction'/></menu><menuitem name='openAction' action='openAction'/><menuitem name='CompactDatabaseAction' action='CompactDatabaseAction'/><separator/><menuitem name='ImportGPXLocZipAction' action='ImportGPXLocZipAction'/><menuitem name='ImportDirectoryAction' action='ImportDirectoryAction'/><menuitem name='ImportOpenCachingAction' action='ImportOpenCachingAction'/><separator/><menu name='ExportAction' action='ExportAction'><menuitem name='ExportGPXAction' action='ExportGPXAction'/><menuitem name='ExportFindsGPXAction' action='ExportFindsGPXAction'/><menuitem name='ExportGarminPOIFileAction' action='ExportGarminPOIFileAction'/></menu><separator/><menuitem name='printAction' action='printAction'/><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='CopyToAction' action='CopyToAction'/><menuitem name='MoveToAction' action='MoveToAction'/><separator/><menuitem name='DeleteAction' action='DeleteAction'/><menuitem name='DeleteAllAction' action='DeleteAllAction'/><separator/><menuitem name='GrabImagesAction1' action='GrabImagesAction1'/><menuitem name='GrabAllImagesAction' action='GrabAllImagesAction'/><separator/><menuitem name='DeselectAction' action='DeselectAction'/><separator/><menuitem name='PreferencesAction' action='PreferencesAction'/></menu><menu name='ViewAction' action='ViewAction'><menuitem name='ShowNearbyCachesAction' action='ShowNearbyCachesAction'/><menu name='ChildWaypointsAction' action='ChildWaypointsAction'><menuitem name='SelectedCacheOnlyAction' action='SelectedCacheOnlyAction'/><menuitem name='AllWaypointsAction' action='AllWaypointsAction'/></menu><menuitem name='MapPopupsAction' action='MapPopupsAction'/><separator/><menuitem name='FieldNotesAction' action='FieldNotesAction'/><menuitem name='FullScreenAction' action='FullScreenAction'/></menu><menu name='FilterAction' action='FilterAction'><menuitem name='QuickFilterAction' action='QuickFilterAction'/><menuitem name='AdvancedFiltersAction' action='AdvancedFiltersAction'/><menuitem name='CombinationFilterAction' action='CombinationFilterAction'/><separator/><menuitem name='ClearAdvancedFiltersAction' action='ClearAdvancedFiltersAction'/><menuitem name='ClearComboFilterAction' action='ClearComboFilterAction'/><menuitem name='ClearAllFiltersAction' action='ClearAllFiltersAction'/><separator/><menuitem name='SaveCurrentViewAsQuickFilterAction' action='SaveCurrentViewAsQuickFilterAction'/><menuitem name='DeleteQuickFilterAction' action='DeleteQuickFilterAction'/></menu><menu name='GoAction' action='GoAction'><menu name='LocationsAction' action='LocationsAction'/><menuitem name='AddLocationAction' action='AddLocationAction'/><menuitem name='DeleteLocationAction' action='DeleteLocationAction'/><separator/><menuitem name='PanToCentreAction' action='PanToCentreAction'/><menuitem name='PanToSelectedCacheAction' action='PanToSelectedCacheAction'/><menuitem name='ZoomToCentreAction' action='ZoomToCentreAction'/><menuitem name='ZoomToSelectedCacheAction' action='ZoomToSelectedCacheAction'/></menu><menu name='BookmarksAction' action='BookmarksAction'><menu name='BookmarkListAction' action='BookmarkListAction'/><menu name='AddAllUnfilteredCachesToAction' action='AddAllUnfilteredCachesToAction'/><menuitem name='AddSelectedCacheToAction' action='AddSelectedCacheToAction'/><menuitem name='RemoveSelectedCacheFromBookmarkListAction' action='RemoveSelectedCacheFromBookmarkListAction'/><separator/><menuitem name='CreateBookmarkListAction' action='CreateBookmarkListAction'/><menuitem name='DeleteBookmarkListAction' action='DeleteBookmarkListAction'/></menu><menu name='CacheAction' action='CacheAction'><menuitem name='LogFindAction' action='LogFindAction'/><menuitem name='LogToFieldNotesFileAction' action='LogToFieldNotesFileAction'/><separator/><menu name='MarkAction' action='MarkAction'><menuitem name='MarkFoundAction' action='MarkFoundAction'/><menuitem name='MarkFirstToFindAction' action='MarkFirstToFindAction'/><menuitem name='MarkDidNotFindAction' action='MarkDidNotFindAction'/><menuitem name='MarkUnfoundAction' action='MarkUnfoundAction'/><menuitem name='MarkDisabledAction' action='MarkDisabledAction'/><menuitem name='MarkArchivedAction' action='MarkArchivedAction'/><menuitem name='MarkAvailableAction' action='MarkAvailableAction'/></menu><menuitem name='AddChildWaypointAction' action='AddChildWaypointAction'/><menuitem name='CorrectedCoordinatesAction' action='CorrectedCoordinatesAction'/><separator/><menuitem name='ViewOnlineAction' action='ViewOnlineAction'/><separator/><menuitem name='SetSelectedCacheAsCentreAction' action='SetSelectedCacheAsCentreAction'/><menuitem name='ModifyCacheAction' action='ModifyCacheAction'/><menuitem name='ReduceNumberOfLogsAction' action='ReduceNumberOfLogsAction'/></menu><menu name='WebAction' action='WebAction'><menuitem name='OCMHomePageAction' action='OCMHomePageAction'/><separator/><menu name='GeocachingComAction' action='GeocachingComAction'><menuitem name='HomePageAction' action='HomePageAction'/><menuitem name='ViewMyProfileAction' action='ViewMyProfileAction'/><menuitem name='MyAccountDetailsAction' action='MyAccountDetailsAction'/><menuitem name='CreatePocketQueriesAction' action='CreatePocketQueriesAction'/><menuitem name='StatisticsAction' action='StatisticsAction'/><separator/><menuitem name='FindACacheAction' action='FindACacheAction'/></menu><menu name='TerracachingComAction' action='TerracachingComAction'><menuitem name='TCHomePageAction' action='TCHomePageAction'/><menu name='ToDoListAction' action='ToDoListAction'><menuitem name='TraditionalAction' action='TraditionalAction'/><menuitem name='LocationlessAction' action='LocationlessAction'/></menu></menu><menu name='NavicacheComAction' action='NavicacheComAction'><menuitem name='NVHomePageAction' action='NVHomePageAction'/><menuitem name='MyNavicacheAction' action='MyNavicacheAction'/></menu><menu name='OpencachingAction' action='OpencachingAction'><menuitem name='ListOfCountrySitesAction' action='ListOfCountrySitesAction'/></menu><menuitem name='GPSBabelHomePageAction' action='GPSBabelHomePageAction'/><menuitem name='GPSDHomePageAction' action='GPSDHomePageAction'/></menu><menu name='GPSAction' action='GPSAction'><menuitem name='TransferCachesToLastUsedAction' action='TransferCachesToLastUsedAction'/><menuitem name='ReceiveFieldNotesFromLastUsedAction' action='ReceiveFieldNotesFromLastUsedAction'/><separator/><menu name='TransferCachesAction' action='TransferCachesAction'/><menu name='ReceiveFieldNotesAction' action='ReceiveFieldNotesAction'/><separator/><menuitem name='AddGPSProfileAction' action='AddGPSProfileAction'/><menu name='EditGPSProfileAction' action='EditGPSProfileAction'/><menuitem name='DeleteGPSProfileAction' action='DeleteGPSProfileAction'/></menu><menu name='ToolsAction' action='ToolsAction'><menuitem name='ViewAllInQLandkarteGTAction' action='ViewAllInQLandkarteGTAction'/><menuitem name='ViewSelectedCacheInQLandkarteGTAction' action='ViewSelectedCacheInQLandkarteGTAction'/><separator/><menu name='ExternalToolsAction' action='ExternalToolsAction'/><menuitem name='ConfigureExternalToolsAction' action='ConfigureExternalToolsAction'/><separator/><menuitem name='DatabaseCleanupAssistantAction' action='DatabaseCleanupAssistantAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='OCMWikiAction' action='OCMWikiAction'/><menuitem name='OCMWebsiteAction' action='OCMWebsiteAction'/><separator/><menuitem name='AboutAction' action='AboutAction'/><menuitem name='ChangeHistoryAction' action='ChangeHistoryAction'/><menuitem name='CheckForUpdatesAction' action='CheckForUpdatesAction'/></menu></menubar></ui>");
			this.mainMenuBar = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/mainMenuBar")));
			this.mainMenuBar.Name = "mainMenuBar";
			this.mainWindowContents.Add (this.mainMenuBar);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.mainWindowContents [this.mainMenuBar]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child mainWindowContents.Gtk.Box+BoxChild
			this.mainHPane = new global::Gtk.HPaned ();
			this.mainHPane.CanFocus = true;
			this.mainHPane.Name = "mainHPane";
			this.mainHPane.Position = 300;
			// Container child mainHPane.Gtk.Paned+PanedChild
			this.cacheList = null;
			this.mainHPane.Add (this.cacheList);
			global::Gtk.Paned.PanedChild w3 = ((global::Gtk.Paned.PanedChild)(this.mainHPane [this.cacheList]));
			w3.Resize = false;
			// Container child mainHPane.Gtk.Paned+PanedChild
			this.mainVPane = new global::Gtk.VPaned ();
			this.mainVPane.CanFocus = true;
			this.mainVPane.Name = "mainVPane";
			this.mainVPane.Position = 385;
			// Container child mainVPane.Gtk.Paned+PanedChild
			this.ocmCacheInfo = null;
			this.mainVPane.Add (this.ocmCacheInfo);
			global::Gtk.Paned.PanedChild w4 = ((global::Gtk.Paned.PanedChild)(this.mainVPane [this.ocmCacheInfo]));
			w4.Resize = false;
			// Container child mainVPane.Gtk.Paned+PanedChild
			this.mapVBOX = new global::Gtk.VBox ();
			this.mapVBOX.Name = "mapVBOX";
			// Container child mapVBOX.Gtk.Box+BoxChild
			this.hbox14 = new global::Gtk.HBox ();
			this.hbox14.Name = "hbox14";
			// Container child hbox14.Gtk.Box+BoxChild
			this.spacerLabel = new global::Gtk.Label ();
			this.spacerLabel.Name = "spacerLabel";
			this.hbox14.Add (this.spacerLabel);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox14 [this.spacerLabel]));
			w5.Position = 0;
			// Container child hbox14.Gtk.Box+BoxChild
			this.minButton = new global::Gtk.Button ();
			this.minButton.CanFocus = true;
			this.minButton.Name = "minButton";
			this.minButton.FocusOnClick = false;
			this.minButton.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child minButton.Gtk.Container+ContainerChild
			this.image250 = new global::Gtk.Image ();
			this.image250.Name = "image250";
			this.image250.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.minicon.svg");
			this.minButton.Add (this.image250);
			this.hbox14.Add (this.minButton);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox14 [this.minButton]));
			w7.Position = 1;
			w7.Expand = false;
			w7.Fill = false;
			// Container child hbox14.Gtk.Box+BoxChild
			this.mapDownButton = new global::Gtk.Button ();
			this.mapDownButton.CanFocus = true;
			this.mapDownButton.Name = "mapDownButton";
			this.mapDownButton.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child mapDownButton.Gtk.Container+ContainerChild
			this.image38 = new global::Gtk.Image ();
			this.image38.Name = "image38";
			this.image38.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.down_icon.svg");
			this.mapDownButton.Add (this.image38);
			this.hbox14.Add (this.mapDownButton);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hbox14 [this.mapDownButton]));
			w9.Position = 2;
			w9.Expand = false;
			w9.Fill = false;
			// Container child hbox14.Gtk.Box+BoxChild
			this.restoreButton = new global::Gtk.Button ();
			this.restoreButton.CanFocus = true;
			this.restoreButton.Name = "restoreButton";
			this.restoreButton.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child restoreButton.Gtk.Container+ContainerChild
			this.image31 = new global::Gtk.Image ();
			this.image31.Name = "image31";
			this.image31.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.restore.svg");
			this.restoreButton.Add (this.image31);
			this.hbox14.Add (this.restoreButton);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.hbox14 [this.restoreButton]));
			w11.Position = 3;
			w11.Expand = false;
			w11.Fill = false;
			// Container child hbox14.Gtk.Box+BoxChild
			this.mapUpButton = new global::Gtk.Button ();
			this.mapUpButton.CanFocus = true;
			this.mapUpButton.Name = "mapUpButton";
			this.mapUpButton.FocusOnClick = false;
			this.mapUpButton.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child mapUpButton.Gtk.Container+ContainerChild
			this.image37 = new global::Gtk.Image ();
			this.image37.Name = "image37";
			this.image37.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.up_icon.svg");
			this.mapUpButton.Add (this.image37);
			this.hbox14.Add (this.mapUpButton);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.hbox14 [this.mapUpButton]));
			w13.Position = 4;
			w13.Expand = false;
			w13.Fill = false;
			this.mapVBOX.Add (this.hbox14);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.mapVBOX [this.hbox14]));
			w14.Position = 1;
			w14.Expand = false;
			w14.Fill = false;
			// Container child mapVBOX.Gtk.Box+BoxChild
			this.ocmMapWidget = null;
			this.mapVBOX.Add (this.ocmMapWidget);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.mapVBOX [this.ocmMapWidget]));
			w15.Position = 2;
			this.mainVPane.Add (this.mapVBOX);
			this.mainHPane.Add (this.mainVPane);
			this.mainWindowContents.Add (this.mainHPane);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.mainWindowContents [this.mainHPane]));
			w18.Position = 1;
			// Container child mainWindowContents.Gtk.Box+BoxChild
			this.mainStatusBar = new global::Gtk.Statusbar ();
			this.mainStatusBar.Name = "mainStatusBar";
			this.mainStatusBar.Spacing = 6;
			// Container child mainStatusBar.Gtk.Box+BoxChild
			this.LocationLabel = new global::Gtk.Label ();
			this.LocationLabel.Name = "LocationLabel";
			this.LocationLabel.Xalign = 1F;
			this.LocationLabel.LabelProp = "<location>";
			this.mainStatusBar.Add (this.LocationLabel);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.mainStatusBar [this.LocationLabel]));
			w19.Position = 1;
			w19.Expand = false;
			w19.Fill = false;
			// Container child mainStatusBar.Gtk.Box+BoxChild
			this.statusProgressBar = new global::Gtk.ProgressBar ();
			this.statusProgressBar.WidthRequest = 150;
			this.statusProgressBar.HeightRequest = 5;
			this.statusProgressBar.Name = "statusProgressBar";
			this.mainStatusBar.Add (this.statusProgressBar);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.mainStatusBar [this.statusProgressBar]));
			w20.PackType = ((global::Gtk.PackType)(1));
			w20.Position = 2;
			w20.Expand = false;
			this.mainWindowContents.Add (this.mainStatusBar);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.mainWindowContents [this.mainStatusBar]));
			w21.Position = 2;
			w21.Expand = false;
			w21.Fill = false;
			this.Add (this.mainWindowContents);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 1061;
			this.DefaultHeight = 574;
			this.statusProgressBar.Hide ();
			this.Hide ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteWindow);
			this.SizeAllocated += new global::Gtk.SizeAllocatedHandler (this.OnResizeWindow);
			this.openAction.Activated += new global::System.EventHandler (this.OnOpenDatabase);
			this.CompactDatabaseAction.Activated += new global::System.EventHandler (this.OnCompactDatabase);
			this.quitAction.Activated += new global::System.EventHandler (this.OnQuit);
			this.NewDatabaseAction.Activated += new global::System.EventHandler (this.OnNewDatabase);
			this.NewCacheAction.Activated += new global::System.EventHandler (this.OnNewCache);
			this.ShowNearbyCachesAction.Toggled += new global::System.EventHandler (this.OnToggleShowNearby);
			this.FieldNotesAction.Activated += new global::System.EventHandler (this.OnViewFieldNotes);
			this.SelectedCacheOnlyAction.Toggled += new global::System.EventHandler (this.OnToggleSelectedCache);
			this.printAction.Activated += new global::System.EventHandler (this.OnPrintCache);
			this.AddLocationAction.Activated += new global::System.EventHandler (this.OnAddLocation);
			this.DeleteLocationAction.Activated += new global::System.EventHandler (this.OnDeleteLocation);
			this.PanToCentreAction.Activated += new global::System.EventHandler (this.OnPanToCentre);
			this.PanToSelectedCacheAction.Activated += new global::System.EventHandler (this.OnPanToSelected);
			this.ZoomToSelectedCacheAction.Activated += new global::System.EventHandler (this.OnZoomToSelected);
			this.AdvancedFiltersAction.Activated += new global::System.EventHandler (this.OnAdvancedFiltersClick);
			this.CombinationFilterAction.Activated += new global::System.EventHandler (this.OnCombinationClick);
			this.ClearAdvancedFiltersAction.Activated += new global::System.EventHandler (this.OnClearAdvanced);
			this.ClearComboFilterAction.Activated += new global::System.EventHandler (this.OnClearCombo);
			this.ClearAllFiltersAction.Activated += new global::System.EventHandler (this.OnClearAll);
			this.OCMWikiAction.Activated += new global::System.EventHandler (this.OnWikiClick);
			this.OCMWebsiteAction.Activated += new global::System.EventHandler (this.OnForumsClick);
			this.AboutAction.Activated += new global::System.EventHandler (this.OnAboutClick);
			this.ChangeHistoryAction.Activated += new global::System.EventHandler (this.OnChangeHistoryClick);
			this.CheckForUpdatesAction.Activated += new global::System.EventHandler (this.OnCheckUpdatesClick);
			this.OCMHomePageAction.Activated += new global::System.EventHandler (this.OnOCMHomeClick);
			this.GPSBabelHomePageAction.Activated += new global::System.EventHandler (this.OnGPSBabelClick);
			this.GPSDHomePageAction.Activated += new global::System.EventHandler (this.OnGPSDClick);
			this.HomePageAction.Activated += new global::System.EventHandler (this.OnGCHomeClick);
			this.ViewMyProfileAction.Activated += new global::System.EventHandler (this.OnGCProfileClick);
			this.MyAccountDetailsAction.Activated += new global::System.EventHandler (this.OnGCAccountClick);
			this.CreatePocketQueriesAction.Activated += new global::System.EventHandler (this.OnGCPocketQueryClick);
			this.StatisticsAction.Activated += new global::System.EventHandler (this.OnGCStatsClick);
			this.FindACacheAction.Activated += new global::System.EventHandler (this.OnGCFindClick);
			this.TCHomePageAction.Activated += new global::System.EventHandler (this.OnTCHomePageClick);
			this.TraditionalAction.Activated += new global::System.EventHandler (this.OnTCTraditionalClick);
			this.LocationlessAction.Activated += new global::System.EventHandler (this.OnTCLocationlessClick);
			this.ListOfCountrySitesAction.Activated += new global::System.EventHandler (this.OnOCCountryList);
			this.NVHomePageAction.Activated += new global::System.EventHandler (this.OnNaviHome);
			this.MyNavicacheAction.Activated += new global::System.EventHandler (this.OnMyNavi);
			this.AddChildWaypointAction.Activated += new global::System.EventHandler (this.OnAddChildWaypoint);
			this.CorrectedCoordinatesAction.Activated += new global::System.EventHandler (this.OnAddCorrectedCoordinate);
			this.ViewOnlineAction.Activated += new global::System.EventHandler (this.OnViewOnlineClick);
			this.SetSelectedCacheAsCentreAction.Activated += new global::System.EventHandler (this.OnSetSelectedAsCentreClick);
			this.ModifyCacheAction.Activated += new global::System.EventHandler (this.OnModifyCache);
			this.MarkFoundAction.Activated += new global::System.EventHandler (this.OnMarkFound);
			this.MarkFirstToFindAction.Activated += new global::System.EventHandler (this.OnMarkFTF);
			this.MarkDidNotFindAction.Activated += new global::System.EventHandler (this.OnMarkDNF);
			this.MarkUnfoundAction.Activated += new global::System.EventHandler (this.OnMarkUnfound);
			this.MarkDisabledAction.Activated += new global::System.EventHandler (this.OnMarkDisabled);
			this.MarkArchivedAction.Activated += new global::System.EventHandler (this.OnMarkArchived);
			this.MarkAvailableAction.Activated += new global::System.EventHandler (this.OnMarkAvailable);
			this.RemoveSelectedCacheFromBookmarkListAction.Activated += new global::System.EventHandler (this.OnRemoveFromList);
			this.CreateBookmarkListAction.Activated += new global::System.EventHandler (this.OnCreateBookmarkList);
			this.DeleteBookmarkListAction.Activated += new global::System.EventHandler (this.OnDeleteBookmarkList);
			this.ZoomToCentreAction.Activated += new global::System.EventHandler (this.OnZoomToCentre);
			this.ImportGPXLocZipAction.Activated += new global::System.EventHandler (this.OnImportGPX);
			this.ImportDirectoryAction.Activated += new global::System.EventHandler (this.OnImportDirectory);
			this.SaveCurrentViewAsQuickFilterAction.Activated += new global::System.EventHandler (this.OnSaveQuickFilter);
			this.DeleteQuickFilterAction.Activated += new global::System.EventHandler (this.OnDeleteQuickFilter);
			this.ExportGPXAction.Activated += new global::System.EventHandler (this.OnExportGPX);
			this.ExportFindsGPXAction.Activated += new global::System.EventHandler (this.OnMyFindsClick);
			this.ExportGarminPOIFileAction.Activated += new global::System.EventHandler (this.OnExportPOI);
			this.CopyToAction.Activated += new global::System.EventHandler (this.OnCopy);
			this.MoveToAction.Activated += new global::System.EventHandler (this.OnMove);
			this.DeleteAction.Activated += new global::System.EventHandler (this.OnDelete);
			this.DeleteAllAction.Activated += new global::System.EventHandler (this.OnDeleteAll);
			this.DeselectAction.Activated += new global::System.EventHandler (this.OnDeselect);
			this.PreferencesAction.Activated += new global::System.EventHandler (this.OnPreferences);
			this.TransferCachesToLastUsedAction.Activated += new global::System.EventHandler (this.OnTransferLast);
			this.ReceiveFieldNotesFromLastUsedAction.Activated += new global::System.EventHandler (this.OnReceiveLast);
			this.AddGPSProfileAction.Activated += new global::System.EventHandler (this.OnAddProfile);
			this.DeleteGPSProfileAction.Activated += new global::System.EventHandler (this.OnDeleteProfile);
			this.ViewAllInQLandkarteGTAction.Activated += new global::System.EventHandler (this.OnViewInQLGT);
			this.ViewSelectedCacheInQLandkarteGTAction.Activated += new global::System.EventHandler (this.OnViewSelectedInQLGT);
			this.ConfigureExternalToolsAction.Activated += new global::System.EventHandler (this.OnConfigure);
			this.LogFindAction.Activated += new global::System.EventHandler (this.OnLogFind);
			this.LogToFieldNotesFileAction.Activated += new global::System.EventHandler (this.OnLogToFile);
			this.FullScreenAction.Toggled += new global::System.EventHandler (this.OnFullToggle);
			this.GrabImagesAction.Activated += new global::System.EventHandler (this.OnGrabImages);
			this.MapPopupsAction.Toggled += new global::System.EventHandler (this.OnMapPopupToggle);
			this.DatabaseCleanupAssistantAction.Activated += new global::System.EventHandler (this.OnCleanup);
			this.ReduceNumberOfLogsAction.Activated += new global::System.EventHandler (this.OnReduceLogs);
			this.GrabAllImagesAction.Activated += new global::System.EventHandler (this.OnGrabAllImages);
			this.GrabImagesAction1.Activated += new global::System.EventHandler (this.OnGrabImages);
			this.ImportOpenCachingAction.Activated += new global::System.EventHandler (this.OnImportOpencaching);
			this.minButton.Clicked += new global::System.EventHandler (this.OnMinClick);
			this.mapDownButton.Clicked += new global::System.EventHandler (this.OnDownClick);
			this.restoreButton.Clicked += new global::System.EventHandler (this.OnRestoreClick);
			this.mapUpButton.Clicked += new global::System.EventHandler (this.OnUpClick);
		}
	}
}


// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class GarminUSBWidget
	{
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.Table table1;
		
		private global::Gtk.ComboBox descMode;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.CheckButton limitCheck;
		
		private global::Gtk.Entry limitEntry;
		
		private global::Gtk.ComboBox nameMode;
		
		private global::Gtk.HBox hbox2;
		
		private global::Gtk.Image image2;
		
		private global::Gtk.Button hotPlugButton;
		
		private global::Gtk.Label label4;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.GarminUSBWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.GarminUSBWidget";
			// Container child ocmgtk.GarminUSBWidget.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			this.vbox2.BorderWidth = ((uint)(6));
			// Container child vbox2.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(3)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.descMode = global::Gtk.ComboBox.NewText ();
			this.descMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Name"));
			this.descMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code/Size/Hint"));
			this.descMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code/Size/Type"));
			this.descMode.Name = "descMode";
			this.descMode.Active = 0;
			this.table1.Add (this.descMode);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.descMode]));
			w1.TopAttach = ((uint)(2));
			w1.BottomAttach = ((uint)(3));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Name Format:");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 0F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Description Format:");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w3.TopAttach = ((uint)(2));
			w3.BottomAttach = ((uint)(3));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitCheck = new global::Gtk.CheckButton ();
			this.limitCheck.CanFocus = true;
			this.limitCheck.Name = "limitCheck";
			this.limitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Geocaches");
			this.limitCheck.Active = true;
			this.limitCheck.DrawIndicator = true;
			this.limitCheck.UseUnderline = true;
			this.table1.Add (this.limitCheck);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitCheck]));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitEntry = new global::Gtk.Entry ();
			this.limitEntry.CanFocus = true;
			this.limitEntry.Name = "limitEntry";
			this.limitEntry.Text = "500";
			this.limitEntry.IsEditable = true;
			this.limitEntry.InvisibleChar = 'â€¢';
			this.table1.Add (this.limitEntry);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitEntry]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.nameMode = global::Gtk.ComboBox.NewText ();
			this.nameMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code"));
			this.nameMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Name"));
			this.nameMode.Name = "nameMode";
			this.nameMode.Active = 0;
			this.table1.Add (this.nameMode);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.nameMode]));
			w6.TopAttach = ((uint)(1));
			w6.BottomAttach = ((uint)(2));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox2.Add (this.table1);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.table1]));
			w7.Position = 0;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.image2 = new global::Gtk.Image ();
			this.image2.Name = "image2";
			this.image2.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-warning", global::Gtk.IconSize.Menu);
			this.hbox2.Add (this.image2);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.image2]));
			w8.Position = 0;
			w8.Expand = false;
			w8.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.hotPlugButton = new global::Gtk.Button ();
			this.hotPlugButton.CanFocus = true;
			this.hotPlugButton.Name = "hotPlugButton";
			this.hotPlugButton.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child hotPlugButton.Gtk.Container+ContainerChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Important:</b>  You may need to configure non-root access to\nUSB to allow OCM to write to your Garmin Device. See:\n<span fgcolor=\"blue\">http://www.gpsbabel.org/os/Linux_Hotplug.html</span>");
			this.label4.UseMarkup = true;
			this.hotPlugButton.Add (this.label4);
			this.hbox2.Add (this.hotPlugButton);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.hotPlugButton]));
			w10.Position = 1;
			w10.Expand = false;
			w10.Fill = false;
			this.vbox2.Add (this.hbox2);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox2]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.limitCheck.Toggled += new global::System.EventHandler (this.OnLimitToggle);
			this.hotPlugButton.Clicked += new global::System.EventHandler (this.OnHotplugClick);
		}
	}
}


// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class OCMQueryPage1
	{
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.Frame frame1;
		
		private global::Gtk.Alignment GtkAlignment1;
		
		private global::Gtk.Table table1;
		
		private global::Gtk.CheckButton diffCheck;
		
		private global::Gtk.ComboBox diffRange;
		
		private global::Gtk.ComboBox diffValue;
		
		private global::Gtk.CheckButton terrainCheck;
		
		private global::Gtk.ComboBox terrRange;
		
		private global::Gtk.ComboBox terrValue;
		
		private global::Gtk.Label GtkLabel19;
		
		private global::Gtk.Frame frame2;
		
		private global::Gtk.Alignment GtkAlignment2;
		
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.RadioButton allCacheRadio;
		
		private global::Gtk.RadioButton selCacheRadio;
		
		private global::Gtk.Frame selCacheFrame;
		
		private global::Gtk.Alignment GtkAlignment;
		
		private global::Gtk.Table table2;
		
		private global::Gtk.CheckButton advCheck;
		
		private global::Gtk.CheckButton apeCheck;
		
		private global::Gtk.CheckButton citoCheck;
		
		private global::Gtk.CheckButton earCheck;
		
		private global::Gtk.CheckButton evntCheck;
		
		private global::Gtk.CheckButton lettCheck;
		
		private global::Gtk.CheckButton locCheck;
		
		private global::Gtk.CheckButton megaCheck;
		
		private global::Gtk.CheckButton multiCheck;
		
		private global::Gtk.CheckButton tradCheck;
		
		private global::Gtk.CheckButton unkCheck;
		
		private global::Gtk.CheckButton virtCheck;
		
		private global::Gtk.CheckButton webCheck;
		
		private global::Gtk.CheckButton wherigoCheck;
		
		private global::Gtk.CheckButton providerCheck;
		
		private global::Gtk.Frame sourceFrame;
		
		private global::Gtk.Alignment GtkAlignment3;
		
		private global::Gtk.Table table3;
		
		private global::Gtk.CheckButton gcComCheck;
		
		private global::Gtk.CheckButton NaviCacheCheck;
		
		private global::Gtk.CheckButton openCacheCheck;
		
		private global::Gtk.CheckButton terraCachingCheck;
		
		private global::Gtk.CheckButton wayMarkingCheck;
		
		private global::Gtk.Label GtkLabel25;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.OCMQueryPage1
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.OCMQueryPage1";
			// Container child ocmgtk.OCMQueryPage1.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			this.vbox1.BorderWidth = ((uint)(6));
			// Container child vbox1.Gtk.Box+BoxChild
			this.frame1 = new global::Gtk.Frame ();
			this.frame1.Name = "frame1";
			this.frame1.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame1.Gtk.Container+ContainerChild
			this.GtkAlignment1 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment1.Name = "GtkAlignment1";
			this.GtkAlignment1.LeftPadding = ((uint)(12));
			// Container child GtkAlignment1.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(2)), ((uint)(3)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			this.table1.BorderWidth = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.diffCheck = new global::Gtk.CheckButton ();
			this.diffCheck.CanFocus = true;
			this.diffCheck.Name = "diffCheck";
			this.diffCheck.Label = global::Mono.Unix.Catalog.GetString ("Difficulty");
			this.diffCheck.DrawIndicator = true;
			this.diffCheck.UseUnderline = true;
			this.table1.Add (this.diffCheck);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.diffCheck]));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.diffRange = global::Gtk.ComboBox.NewText ();
			this.diffRange.AppendText (global::Mono.Unix.Catalog.GetString ("Greater Than"));
			this.diffRange.AppendText (global::Mono.Unix.Catalog.GetString ("Greater Than or Equal To"));
			this.diffRange.AppendText (global::Mono.Unix.Catalog.GetString ("Equal To"));
			this.diffRange.AppendText (global::Mono.Unix.Catalog.GetString ("Less Than or Equal To"));
			this.diffRange.AppendText (global::Mono.Unix.Catalog.GetString ("Less Than"));
			this.diffRange.Sensitive = false;
			this.diffRange.Name = "diffRange";
			this.diffRange.Active = 0;
			this.table1.Add (this.diffRange);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.diffRange]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.diffValue = global::Gtk.ComboBox.NewText ();
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("1"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("1.5"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("2"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("2.5"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("3"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("3.5"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("4"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("4.5"));
			this.diffValue.AppendText (global::Mono.Unix.Catalog.GetString ("5"));
			this.diffValue.Sensitive = false;
			this.diffValue.Name = "diffValue";
			this.diffValue.Active = 0;
			this.table1.Add (this.diffValue);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.diffValue]));
			w3.LeftAttach = ((uint)(2));
			w3.RightAttach = ((uint)(3));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.terrainCheck = new global::Gtk.CheckButton ();
			this.terrainCheck.CanFocus = true;
			this.terrainCheck.Name = "terrainCheck";
			this.terrainCheck.Label = global::Mono.Unix.Catalog.GetString ("Terrain");
			this.terrainCheck.DrawIndicator = true;
			this.terrainCheck.UseUnderline = true;
			this.table1.Add (this.terrainCheck);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.terrainCheck]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.terrRange = global::Gtk.ComboBox.NewText ();
			this.terrRange.AppendText (global::Mono.Unix.Catalog.GetString ("Greater Than"));
			this.terrRange.AppendText (global::Mono.Unix.Catalog.GetString ("Greater Than or Equal To"));
			this.terrRange.AppendText (global::Mono.Unix.Catalog.GetString ("Equal To"));
			this.terrRange.AppendText (global::Mono.Unix.Catalog.GetString ("Less Than or Equal To"));
			this.terrRange.AppendText (global::Mono.Unix.Catalog.GetString ("Less Than"));
			this.terrRange.Sensitive = false;
			this.terrRange.Name = "terrRange";
			this.terrRange.Active = 0;
			this.table1.Add (this.terrRange);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.terrRange]));
			w5.TopAttach = ((uint)(1));
			w5.BottomAttach = ((uint)(2));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.terrValue = global::Gtk.ComboBox.NewText ();
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("1"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("1.5"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("2"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("2.5"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("3"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("3.5"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("4"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("4.5"));
			this.terrValue.AppendText (global::Mono.Unix.Catalog.GetString ("5"));
			this.terrValue.Sensitive = false;
			this.terrValue.Name = "terrValue";
			this.terrValue.Active = 0;
			this.table1.Add (this.terrValue);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.terrValue]));
			w6.TopAttach = ((uint)(1));
			w6.BottomAttach = ((uint)(2));
			w6.LeftAttach = ((uint)(2));
			w6.RightAttach = ((uint)(3));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			this.GtkAlignment1.Add (this.table1);
			this.frame1.Add (this.GtkAlignment1);
			this.GtkLabel19 = new global::Gtk.Label ();
			this.GtkLabel19.Name = "GtkLabel19";
			this.GtkLabel19.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Difficulty &amp; Terrain</b>");
			this.GtkLabel19.UseMarkup = true;
			this.frame1.LabelWidget = this.GtkLabel19;
			this.vbox1.Add (this.frame1);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.frame1]));
			w9.Position = 0;
			w9.Expand = false;
			w9.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.frame2 = new global::Gtk.Frame ();
			this.frame2.Name = "frame2";
			this.frame2.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame2.Gtk.Container+ContainerChild
			this.GtkAlignment2 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment2.Name = "GtkAlignment2";
			this.GtkAlignment2.LeftPadding = ((uint)(12));
			// Container child GtkAlignment2.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.allCacheRadio = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Any cache type"));
			this.allCacheRadio.CanFocus = true;
			this.allCacheRadio.Name = "allCacheRadio";
			this.allCacheRadio.Active = true;
			this.allCacheRadio.DrawIndicator = true;
			this.allCacheRadio.UseUnderline = true;
			this.allCacheRadio.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.vbox2.Add (this.allCacheRadio);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.allCacheRadio]));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.selCacheRadio = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Any of the following types:"));
			this.selCacheRadio.CanFocus = true;
			this.selCacheRadio.Name = "selCacheRadio";
			this.selCacheRadio.DrawIndicator = true;
			this.selCacheRadio.UseUnderline = true;
			this.selCacheRadio.Group = this.allCacheRadio.Group;
			this.vbox2.Add (this.selCacheRadio);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.selCacheRadio]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.selCacheFrame = new global::Gtk.Frame ();
			this.selCacheFrame.Sensitive = false;
			this.selCacheFrame.Name = "selCacheFrame";
			this.selCacheFrame.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child selCacheFrame.Gtk.Container+ContainerChild
			this.GtkAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment.Name = "GtkAlignment";
			this.GtkAlignment.LeftPadding = ((uint)(12));
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			this.table2 = new global::Gtk.Table (((uint)(5)), ((uint)(3)), false);
			this.table2.Name = "table2";
			this.table2.RowSpacing = ((uint)(6));
			this.table2.ColumnSpacing = ((uint)(6));
			this.table2.BorderWidth = ((uint)(6));
			// Container child table2.Gtk.Table+TableChild
			this.advCheck = new global::Gtk.CheckButton ();
			this.advCheck.CanFocus = true;
			this.advCheck.Name = "advCheck";
			this.advCheck.Label = global::Mono.Unix.Catalog.GetString ("Adventure Maze");
			this.advCheck.DrawIndicator = true;
			this.advCheck.UseUnderline = true;
			this.table2.Add (this.advCheck);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table2 [this.advCheck]));
			w12.TopAttach = ((uint)(3));
			w12.BottomAttach = ((uint)(4));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(2));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.apeCheck = new global::Gtk.CheckButton ();
			this.apeCheck.CanFocus = true;
			this.apeCheck.Name = "apeCheck";
			this.apeCheck.Label = global::Mono.Unix.Catalog.GetString ("A.P.E.");
			this.apeCheck.DrawIndicator = true;
			this.apeCheck.UseUnderline = true;
			this.table2.Add (this.apeCheck);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table2 [this.apeCheck]));
			w13.TopAttach = ((uint)(4));
			w13.BottomAttach = ((uint)(5));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.citoCheck = new global::Gtk.CheckButton ();
			this.citoCheck.CanFocus = true;
			this.citoCheck.Name = "citoCheck";
			this.citoCheck.Label = global::Mono.Unix.Catalog.GetString ("CITO");
			this.citoCheck.DrawIndicator = true;
			this.citoCheck.UseUnderline = true;
			this.table2.Add (this.citoCheck);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table2 [this.citoCheck]));
			w14.TopAttach = ((uint)(2));
			w14.BottomAttach = ((uint)(3));
			w14.LeftAttach = ((uint)(2));
			w14.RightAttach = ((uint)(3));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.earCheck = new global::Gtk.CheckButton ();
			this.earCheck.CanFocus = true;
			this.earCheck.Name = "earCheck";
			this.earCheck.Label = global::Mono.Unix.Catalog.GetString ("Earth Cache");
			this.earCheck.DrawIndicator = true;
			this.earCheck.UseUnderline = true;
			this.table2.Add (this.earCheck);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table2 [this.earCheck]));
			w15.TopAttach = ((uint)(2));
			w15.BottomAttach = ((uint)(3));
			w15.LeftAttach = ((uint)(1));
			w15.RightAttach = ((uint)(2));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.evntCheck = new global::Gtk.CheckButton ();
			this.evntCheck.CanFocus = true;
			this.evntCheck.Name = "evntCheck";
			this.evntCheck.Label = global::Mono.Unix.Catalog.GetString ("Event Cache");
			this.evntCheck.DrawIndicator = true;
			this.evntCheck.UseUnderline = true;
			this.table2.Add (this.evntCheck);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table2 [this.evntCheck]));
			w16.LeftAttach = ((uint)(2));
			w16.RightAttach = ((uint)(3));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.lettCheck = new global::Gtk.CheckButton ();
			this.lettCheck.CanFocus = true;
			this.lettCheck.Name = "lettCheck";
			this.lettCheck.Label = global::Mono.Unix.Catalog.GetString ("Letterbox Hybrid");
			this.lettCheck.DrawIndicator = true;
			this.lettCheck.UseUnderline = true;
			this.table2.Add (this.lettCheck);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table2 [this.lettCheck]));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.locCheck = new global::Gtk.CheckButton ();
			this.locCheck.CanFocus = true;
			this.locCheck.Name = "locCheck";
			this.locCheck.Label = global::Mono.Unix.Catalog.GetString ("Locationless");
			this.locCheck.DrawIndicator = true;
			this.locCheck.UseUnderline = true;
			this.table2.Add (this.locCheck);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table2 [this.locCheck]));
			w18.TopAttach = ((uint)(4));
			w18.BottomAttach = ((uint)(5));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(2));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.megaCheck = new global::Gtk.CheckButton ();
			this.megaCheck.CanFocus = true;
			this.megaCheck.Name = "megaCheck";
			this.megaCheck.Label = global::Mono.Unix.Catalog.GetString ("Mega Event");
			this.megaCheck.DrawIndicator = true;
			this.megaCheck.UseUnderline = true;
			this.table2.Add (this.megaCheck);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table2 [this.megaCheck]));
			w19.TopAttach = ((uint)(1));
			w19.BottomAttach = ((uint)(2));
			w19.LeftAttach = ((uint)(2));
			w19.RightAttach = ((uint)(3));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.multiCheck = new global::Gtk.CheckButton ();
			this.multiCheck.CanFocus = true;
			this.multiCheck.Name = "multiCheck";
			this.multiCheck.Label = global::Mono.Unix.Catalog.GetString ("Multi-Cache");
			this.multiCheck.DrawIndicator = true;
			this.multiCheck.UseUnderline = true;
			this.table2.Add (this.multiCheck);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.table2 [this.multiCheck]));
			w20.TopAttach = ((uint)(1));
			w20.BottomAttach = ((uint)(2));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.tradCheck = new global::Gtk.CheckButton ();
			this.tradCheck.CanFocus = true;
			this.tradCheck.Name = "tradCheck";
			this.tradCheck.Label = global::Mono.Unix.Catalog.GetString ("Traditional");
			this.tradCheck.DrawIndicator = true;
			this.tradCheck.UseUnderline = true;
			this.table2.Add (this.tradCheck);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.table2 [this.tradCheck]));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.unkCheck = new global::Gtk.CheckButton ();
			this.unkCheck.CanFocus = true;
			this.unkCheck.Name = "unkCheck";
			this.unkCheck.Label = global::Mono.Unix.Catalog.GetString ("Unknown");
			this.unkCheck.DrawIndicator = true;
			this.unkCheck.UseUnderline = true;
			this.table2.Add (this.unkCheck);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.table2 [this.unkCheck]));
			w22.TopAttach = ((uint)(2));
			w22.BottomAttach = ((uint)(3));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.virtCheck = new global::Gtk.CheckButton ();
			this.virtCheck.CanFocus = true;
			this.virtCheck.Name = "virtCheck";
			this.virtCheck.Label = global::Mono.Unix.Catalog.GetString ("Virtual");
			this.virtCheck.DrawIndicator = true;
			this.virtCheck.UseUnderline = true;
			this.table2.Add (this.virtCheck);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.table2 [this.virtCheck]));
			w23.TopAttach = ((uint)(3));
			w23.BottomAttach = ((uint)(4));
			w23.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.webCheck = new global::Gtk.CheckButton ();
			this.webCheck.CanFocus = true;
			this.webCheck.Name = "webCheck";
			this.webCheck.Label = global::Mono.Unix.Catalog.GetString ("Webcam");
			this.webCheck.DrawIndicator = true;
			this.webCheck.UseUnderline = true;
			this.table2.Add (this.webCheck);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.table2 [this.webCheck]));
			w24.TopAttach = ((uint)(3));
			w24.BottomAttach = ((uint)(4));
			w24.LeftAttach = ((uint)(2));
			w24.RightAttach = ((uint)(3));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.wherigoCheck = new global::Gtk.CheckButton ();
			this.wherigoCheck.CanFocus = true;
			this.wherigoCheck.Name = "wherigoCheck";
			this.wherigoCheck.Label = global::Mono.Unix.Catalog.GetString ("Wherigo");
			this.wherigoCheck.DrawIndicator = true;
			this.wherigoCheck.UseUnderline = true;
			this.table2.Add (this.wherigoCheck);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.table2 [this.wherigoCheck]));
			w25.TopAttach = ((uint)(1));
			w25.BottomAttach = ((uint)(2));
			w25.LeftAttach = ((uint)(1));
			w25.RightAttach = ((uint)(2));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			this.GtkAlignment.Add (this.table2);
			this.selCacheFrame.Add (this.GtkAlignment);
			this.vbox2.Add (this.selCacheFrame);
			global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.selCacheFrame]));
			w28.Position = 2;
			w28.Expand = false;
			w28.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.providerCheck = new global::Gtk.CheckButton ();
			this.providerCheck.CanFocus = true;
			this.providerCheck.Name = "providerCheck";
			this.providerCheck.Label = global::Mono.Unix.Catalog.GetString ("Cache Source:");
			this.providerCheck.DrawIndicator = true;
			this.providerCheck.UseUnderline = true;
			this.vbox2.Add (this.providerCheck);
			global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.providerCheck]));
			w29.Position = 3;
			w29.Expand = false;
			w29.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.sourceFrame = new global::Gtk.Frame ();
			this.sourceFrame.Sensitive = false;
			this.sourceFrame.Name = "sourceFrame";
			this.sourceFrame.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child sourceFrame.Gtk.Container+ContainerChild
			this.GtkAlignment3 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment3.Name = "GtkAlignment3";
			this.GtkAlignment3.LeftPadding = ((uint)(12));
			// Container child GtkAlignment3.Gtk.Container+ContainerChild
			this.table3 = new global::Gtk.Table (((uint)(2)), ((uint)(3)), false);
			this.table3.Name = "table3";
			this.table3.RowSpacing = ((uint)(6));
			this.table3.ColumnSpacing = ((uint)(6));
			// Container child table3.Gtk.Table+TableChild
			this.gcComCheck = new global::Gtk.CheckButton ();
			this.gcComCheck.CanFocus = true;
			this.gcComCheck.Name = "gcComCheck";
			this.gcComCheck.Label = global::Mono.Unix.Catalog.GetString ("Geocaching.com");
			this.gcComCheck.DrawIndicator = true;
			this.gcComCheck.UseUnderline = true;
			this.table3.Add (this.gcComCheck);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.table3 [this.gcComCheck]));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.NaviCacheCheck = new global::Gtk.CheckButton ();
			this.NaviCacheCheck.CanFocus = true;
			this.NaviCacheCheck.Name = "NaviCacheCheck";
			this.NaviCacheCheck.Label = global::Mono.Unix.Catalog.GetString ("NaviCache");
			this.NaviCacheCheck.DrawIndicator = true;
			this.NaviCacheCheck.UseUnderline = true;
			this.table3.Add (this.NaviCacheCheck);
			global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.table3 [this.NaviCacheCheck]));
			w31.LeftAttach = ((uint)(2));
			w31.RightAttach = ((uint)(3));
			w31.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.openCacheCheck = new global::Gtk.CheckButton ();
			this.openCacheCheck.CanFocus = true;
			this.openCacheCheck.Name = "openCacheCheck";
			this.openCacheCheck.Label = global::Mono.Unix.Catalog.GetString ("OpenCaching (.eu/.us/.jp)");
			this.openCacheCheck.DrawIndicator = true;
			this.openCacheCheck.UseUnderline = true;
			this.table3.Add (this.openCacheCheck);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.table3 [this.openCacheCheck]));
			w32.LeftAttach = ((uint)(1));
			w32.RightAttach = ((uint)(2));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.terraCachingCheck = new global::Gtk.CheckButton ();
			this.terraCachingCheck.CanFocus = true;
			this.terraCachingCheck.Name = "terraCachingCheck";
			this.terraCachingCheck.Label = global::Mono.Unix.Catalog.GetString ("Terracaching.com");
			this.terraCachingCheck.DrawIndicator = true;
			this.terraCachingCheck.UseUnderline = true;
			this.table3.Add (this.terraCachingCheck);
			global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.table3 [this.terraCachingCheck]));
			w33.TopAttach = ((uint)(1));
			w33.BottomAttach = ((uint)(2));
			w33.LeftAttach = ((uint)(1));
			w33.RightAttach = ((uint)(2));
			w33.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.wayMarkingCheck = new global::Gtk.CheckButton ();
			this.wayMarkingCheck.CanFocus = true;
			this.wayMarkingCheck.Name = "wayMarkingCheck";
			this.wayMarkingCheck.Label = global::Mono.Unix.Catalog.GetString ("Waymarking.com");
			this.wayMarkingCheck.DrawIndicator = true;
			this.wayMarkingCheck.UseUnderline = true;
			this.table3.Add (this.wayMarkingCheck);
			global::Gtk.Table.TableChild w34 = ((global::Gtk.Table.TableChild)(this.table3 [this.wayMarkingCheck]));
			w34.TopAttach = ((uint)(1));
			w34.BottomAttach = ((uint)(2));
			w34.YOptions = ((global::Gtk.AttachOptions)(4));
			this.GtkAlignment3.Add (this.table3);
			this.sourceFrame.Add (this.GtkAlignment3);
			this.vbox2.Add (this.sourceFrame);
			global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.sourceFrame]));
			w37.Position = 4;
			w37.Expand = false;
			this.GtkAlignment2.Add (this.vbox2);
			this.frame2.Add (this.GtkAlignment2);
			this.GtkLabel25 = new global::Gtk.Label ();
			this.GtkLabel25.Name = "GtkLabel25";
			this.GtkLabel25.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Cache Types</b>");
			this.GtkLabel25.UseMarkup = true;
			this.frame2.LabelWidget = this.GtkLabel25;
			this.vbox1.Add (this.frame2);
			global::Gtk.Box.BoxChild w40 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.frame2]));
			w40.Position = 1;
			w40.Expand = false;
			w40.Fill = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.terrainCheck.Toggled += new global::System.EventHandler (this.OnTerrToggle);
			this.diffCheck.Toggled += new global::System.EventHandler (this.OnDiffToggle);
			this.allCacheRadio.Toggled += new global::System.EventHandler (this.OnCacheToggle);
			this.providerCheck.Toggled += new global::System.EventHandler (this.OnSourceToggle);
		}
	}
}

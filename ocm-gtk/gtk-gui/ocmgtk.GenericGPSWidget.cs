
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class GenericGPSWidget
	{
		private global::Gtk.VBox vbox3;
		
		private global::Gtk.Table table1;
		
		private global::Gtk.ComboBox descCombo;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.CheckButton limitCheck;
		
		private global::Gtk.Entry limitEntry;
		
		private global::Gtk.ComboBox nameCombo;
		
		private global::Gtk.HSeparator hseparator1;
		
		private global::Gtk.Button hotPlugButton;
		
		private global::Gtk.Label label4;
		
		private global::Gtk.HBox hbox2;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.Entry formatEntry;
		
		private global::Gtk.HBox hbox4;
		
		private global::Gtk.Label label3;
		
		private global::Gtk.Entry fileEntry;
		
		private global::Gtk.Button fileButton;
		
		private global::Gtk.Image image3;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.GenericGPSWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.GenericGPSWidget";
			// Container child ocmgtk.GenericGPSWidget.Gtk.Container+ContainerChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			this.vbox3.BorderWidth = ((uint)(6));
			// Container child vbox3.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(3)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.descCombo = global::Gtk.ComboBox.NewText ();
			this.descCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Name"));
			this.descCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code/Size/Hint"));
			this.descCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code/Size/Type"));
			this.descCombo.Name = "descCombo";
			this.descCombo.Active = 0;
			this.table1.Add (this.descCombo);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.descCombo]));
			w1.TopAttach = ((uint)(2));
			w1.BottomAttach = ((uint)(3));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Name Format:");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 0F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Description Format:");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w3.TopAttach = ((uint)(2));
			w3.BottomAttach = ((uint)(3));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitCheck = new global::Gtk.CheckButton ();
			this.limitCheck.CanFocus = true;
			this.limitCheck.Name = "limitCheck";
			this.limitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Caches");
			this.limitCheck.DrawIndicator = true;
			this.limitCheck.UseUnderline = true;
			this.table1.Add (this.limitCheck);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitCheck]));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitEntry = new global::Gtk.Entry ();
			this.limitEntry.Sensitive = false;
			this.limitEntry.CanFocus = true;
			this.limitEntry.Name = "limitEntry";
			this.limitEntry.Text = "1000";
			this.limitEntry.IsEditable = true;
			this.limitEntry.InvisibleChar = '•';
			this.table1.Add (this.limitEntry);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitEntry]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.nameCombo = global::Gtk.ComboBox.NewText ();
			this.nameCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code"));
			this.nameCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Name"));
			this.nameCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Shot Cache Code"));
			this.nameCombo.Name = "nameCombo";
			this.nameCombo.Active = 0;
			this.table1.Add (this.nameCombo);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.nameCombo]));
			w6.TopAttach = ((uint)(1));
			w6.BottomAttach = ((uint)(2));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox3.Add (this.table1);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.table1]));
			w7.Position = 0;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.vbox3.Add (this.hseparator1);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hseparator1]));
			w8.Position = 1;
			w8.Expand = false;
			w8.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hotPlugButton = new global::Gtk.Button ();
			this.hotPlugButton.CanFocus = true;
			this.hotPlugButton.Name = "hotPlugButton";
			this.hotPlugButton.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child hotPlugButton.Gtk.Container+ContainerChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.Xalign = 0F;
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("Read the GPSBabel Documentation to choose the right values for these fields <span fgcolor=\"blue\">http://www.gpsbabel.org/readme.html</span>");
			this.label4.UseMarkup = true;
			this.label4.Wrap = true;
			this.label4.WidthChars = 50;
			this.hotPlugButton.Add (this.label4);
			this.vbox3.Add (this.hotPlugButton);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hotPlugButton]));
			w10.Position = 2;
			w10.Expand = false;
			w10.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("Output Format:");
			this.hbox2.Add (this.label5);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.label5]));
			w11.Position = 0;
			w11.Expand = false;
			w11.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.formatEntry = new global::Gtk.Entry ();
			this.formatEntry.CanFocus = true;
			this.formatEntry.Name = "formatEntry";
			this.formatEntry.Text = "geo";
			this.formatEntry.IsEditable = true;
			this.formatEntry.WidthChars = 20;
			this.formatEntry.InvisibleChar = '•';
			this.hbox2.Add (this.formatEntry);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.formatEntry]));
			w12.Position = 1;
			this.vbox3.Add (this.hbox2);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hbox2]));
			w13.Position = 3;
			w13.Expand = false;
			w13.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hbox4 = new global::Gtk.HBox ();
			this.hbox4.Name = "hbox4";
			this.hbox4.Spacing = 6;
			// Container child hbox4.Gtk.Box+BoxChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("Output FIle:");
			this.hbox4.Add (this.label3);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.label3]));
			w14.Position = 0;
			w14.Expand = false;
			w14.Fill = false;
			// Container child hbox4.Gtk.Box+BoxChild
			this.fileEntry = new global::Gtk.Entry ();
			this.fileEntry.CanFocus = true;
			this.fileEntry.Name = "fileEntry";
			this.fileEntry.Text = "caches.loc";
			this.fileEntry.IsEditable = true;
			this.fileEntry.InvisibleChar = '•';
			this.hbox4.Add (this.fileEntry);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.fileEntry]));
			w15.Position = 1;
			// Container child hbox4.Gtk.Box+BoxChild
			this.fileButton = new global::Gtk.Button ();
			this.fileButton.CanFocus = true;
			this.fileButton.Name = "fileButton";
			// Container child fileButton.Gtk.Container+ContainerChild
			this.image3 = new global::Gtk.Image ();
			this.image3.Name = "image3";
			this.image3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-open", global::Gtk.IconSize.Menu);
			this.fileButton.Add (this.image3);
			this.hbox4.Add (this.fileButton);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.fileButton]));
			w17.Position = 2;
			w17.Expand = false;
			w17.Fill = false;
			this.vbox3.Add (this.hbox4);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hbox4]));
			w18.Position = 4;
			w18.Expand = false;
			w18.Fill = false;
			this.Add (this.vbox3);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.limitCheck.Toggled += new global::System.EventHandler (this.OnLimitCheckToggled);
			this.hotPlugButton.Clicked += new global::System.EventHandler (this.OnInfoClick);
			this.fileButton.Clicked += new global::System.EventHandler (this.OnFileClick);
		}
	}
}

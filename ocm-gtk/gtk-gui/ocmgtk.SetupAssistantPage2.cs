
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class SetupAssistantPage2
	{
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.Label label4;
		
		private global::Gtk.HBox hbox3;
		
		private global::Gtk.Entry dataEntry;
		
		private global::Gtk.Button button10;
		
		private global::Gtk.Image image3;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.Entry dbEntry;
		
		private global::Gtk.Button openButton;
		
		private global::Gtk.Image image4;
		
		private global::Gtk.Table table2;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.Label label3;
		
		private global::Gtk.ComboBox mapsCombo;
		
		private global::Gtk.ComboBox unitsCombo;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.SetupAssistantPage2
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.SetupAssistantPage2";
			// Container child ocmgtk.SetupAssistantPage2.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			this.vbox2.BorderWidth = ((uint)(6));
			// Container child vbox2.Gtk.Box+BoxChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.Xalign = 0F;
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("You should choose an default directory for OCM to store data:");
			this.vbox2.Add (this.label4);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label4]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox3 = new global::Gtk.HBox ();
			this.hbox3.Name = "hbox3";
			this.hbox3.Spacing = 6;
			// Container child hbox3.Gtk.Box+BoxChild
			this.dataEntry = new global::Gtk.Entry ();
			this.dataEntry.CanFocus = true;
			this.dataEntry.Name = "dataEntry";
			this.dataEntry.IsEditable = true;
			this.dataEntry.InvisibleChar = '•';
			this.hbox3.Add (this.dataEntry);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.dataEntry]));
			w2.Position = 0;
			// Container child hbox3.Gtk.Box+BoxChild
			this.button10 = new global::Gtk.Button ();
			this.button10.CanFocus = true;
			this.button10.Name = "button10";
			// Container child button10.Gtk.Container+ContainerChild
			this.image3 = new global::Gtk.Image ();
			this.image3.Name = "image3";
			this.image3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-directory", global::Gtk.IconSize.Button);
			this.button10.Add (this.image3);
			this.hbox3.Add (this.button10);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.button10]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			this.vbox2.Add (this.hbox3);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox3]));
			w5.Position = 1;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("You will need to create a database to use OCM, or open an existing OCM database if you already have one from somewhere else. ");
			this.label1.Wrap = true;
			this.label1.WidthChars = 80;
			this.vbox2.Add (this.label1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.label1]));
			w6.Position = 2;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.dbEntry = new global::Gtk.Entry ();
			this.dbEntry.CanFocus = true;
			this.dbEntry.Name = "dbEntry";
			this.dbEntry.IsEditable = true;
			this.dbEntry.InvisibleChar = '•';
			this.hbox1.Add (this.dbEntry);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.dbEntry]));
			w7.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.openButton = new global::Gtk.Button ();
			this.openButton.CanFocus = true;
			this.openButton.Name = "openButton";
			// Container child openButton.Gtk.Container+ContainerChild
			this.image4 = new global::Gtk.Image ();
			this.image4.Name = "image4";
			this.image4.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-open", global::Gtk.IconSize.Menu);
			this.openButton.Add (this.image4);
			this.hbox1.Add (this.openButton);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.openButton]));
			w9.Position = 1;
			w9.Expand = false;
			w9.Fill = false;
			this.vbox2.Add (this.hbox1);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox1]));
			w10.Position = 3;
			w10.Expand = false;
			w10.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.table2 = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.table2.Name = "table2";
			this.table2.RowSpacing = ((uint)(6));
			this.table2.ColumnSpacing = ((uint)(6));
			// Container child table2.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 0F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("OCM should report distances in ");
			this.table2.Add (this.label2);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table2 [this.label2]));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.Xalign = 0F;
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("Default map that OCM should use");
			this.table2.Add (this.label3);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table2 [this.label3]));
			w12.TopAttach = ((uint)(1));
			w12.BottomAttach = ((uint)(2));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.mapsCombo = global::Gtk.ComboBox.NewText ();
			this.mapsCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Open Street Maps"));
			this.mapsCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Google Hybrid"));
			this.mapsCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Google Street Maps"));
			this.mapsCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Google Terrain"));
			this.mapsCombo.Name = "mapsCombo";
			this.mapsCombo.Active = 0;
			this.table2.Add (this.mapsCombo);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table2 [this.mapsCombo]));
			w13.TopAttach = ((uint)(1));
			w13.BottomAttach = ((uint)(2));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.unitsCombo = global::Gtk.ComboBox.NewText ();
			this.unitsCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Metric"));
			this.unitsCombo.AppendText (global::Mono.Unix.Catalog.GetString ("U.S./Imperial"));
			this.unitsCombo.Name = "unitsCombo";
			this.unitsCombo.Active = 0;
			this.table2.Add (this.unitsCombo);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table2 [this.unitsCombo]));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox2.Add (this.table2);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.table2]));
			w15.Position = 4;
			w15.Expand = false;
			w15.Fill = false;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.dataEntry.Changed += new global::System.EventHandler (this.OnDefaultDirChanged);
			this.button10.Clicked += new global::System.EventHandler (this.OnDirectoryClick);
			this.openButton.Clicked += new global::System.EventHandler (this.OnOpenClicked);
		}
	}
}

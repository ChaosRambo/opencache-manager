
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class ImportDialog
	{
		private global::Gtk.FileChooserWidget fileWidget;
		
		private global::Gtk.Expander expander1;
		
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.CheckButton oldLogsCheck;
		
		private global::Gtk.CheckButton statusCheck;
		
		private global::Gtk.CheckButton gsakFieldsCheck;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.CheckButton addToListCheck;
		
		private global::Gtk.ComboBox bmCombo;
		
		private global::Gtk.Button addBmrkButton;
		
		private global::Gtk.Image image20;
		
		private global::Gtk.Label GtkLabel17;
		
		private global::Gtk.Button buttonCancel;
		
		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.ImportDialog
			this.WidthRequest = 700;
			this.HeightRequest = 500;
			this.Name = "ocmgtk.ImportDialog";
			this.Title = global::Mono.Unix.Catalog.GetString ("Import GPX/LOC/ZIP..");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.BorderWidth = ((uint)(6));
			this.Resizable = false;
			this.AllowGrow = false;
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child ocmgtk.ImportDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.fileWidget = new global::Gtk.FileChooserWidget (((global::Gtk.FileChooserAction)(0)));
			this.fileWidget.Name = "fileWidget";
			w1.Add (this.fileWidget);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(w1 [this.fileWidget]));
			w2.Position = 0;
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.expander1 = new global::Gtk.Expander (null);
			this.expander1.CanFocus = true;
			this.expander1.Name = "expander1";
			this.expander1.Expanded = true;
			// Container child expander1.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.oldLogsCheck = new global::Gtk.CheckButton ();
			this.oldLogsCheck.CanFocus = true;
			this.oldLogsCheck.Name = "oldLogsCheck";
			this.oldLogsCheck.Label = global::Mono.Unix.Catalog.GetString ("Purge old cache logs");
			this.oldLogsCheck.DrawIndicator = true;
			this.oldLogsCheck.UseUnderline = true;
			this.vbox2.Add (this.oldLogsCheck);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.oldLogsCheck]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.statusCheck = new global::Gtk.CheckButton ();
			this.statusCheck.CanFocus = true;
			this.statusCheck.Name = "statusCheck";
			this.statusCheck.Label = global::Mono.Unix.Catalog.GetString ("Do not overwrite existing found status in database");
			this.statusCheck.DrawIndicator = true;
			this.statusCheck.UseUnderline = true;
			this.vbox2.Add (this.statusCheck);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.statusCheck]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.gsakFieldsCheck = new global::Gtk.CheckButton ();
			this.gsakFieldsCheck.CanFocus = true;
			this.gsakFieldsCheck.Name = "gsakFieldsCheck";
			this.gsakFieldsCheck.Label = global::Mono.Unix.Catalog.GetString ("Ignore GSAK/OCM extra fields in GPX file");
			this.gsakFieldsCheck.DrawIndicator = true;
			this.gsakFieldsCheck.UseUnderline = true;
			this.vbox2.Add (this.gsakFieldsCheck);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.gsakFieldsCheck]));
			w5.Position = 2;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.addToListCheck = new global::Gtk.CheckButton ();
			this.addToListCheck.CanFocus = true;
			this.addToListCheck.Name = "addToListCheck";
			this.addToListCheck.Label = global::Mono.Unix.Catalog.GetString ("Add to bookmark list:");
			this.addToListCheck.DrawIndicator = true;
			this.addToListCheck.UseUnderline = true;
			this.hbox1.Add (this.addToListCheck);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.addToListCheck]));
			w6.Position = 0;
			w6.Expand = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.bmCombo = global::Gtk.ComboBox.NewText ();
			this.bmCombo.Sensitive = false;
			this.bmCombo.Name = "bmCombo";
			this.hbox1.Add (this.bmCombo);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.bmCombo]));
			w7.Position = 1;
			w7.Expand = false;
			w7.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.addBmrkButton = new global::Gtk.Button ();
			this.addBmrkButton.CanFocus = true;
			this.addBmrkButton.Name = "addBmrkButton";
			// Container child addBmrkButton.Gtk.Container+ContainerChild
			this.image20 = new global::Gtk.Image ();
			this.image20.Sensitive = false;
			this.image20.Name = "image20";
			this.image20.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			this.addBmrkButton.Add (this.image20);
			this.hbox1.Add (this.addBmrkButton);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.addBmrkButton]));
			w9.Position = 2;
			w9.Expand = false;
			w9.Fill = false;
			this.vbox2.Add (this.hbox1);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox1]));
			w10.Position = 3;
			w10.Expand = false;
			w10.Fill = false;
			this.expander1.Add (this.vbox2);
			this.GtkLabel17 = new global::Gtk.Label ();
			this.GtkLabel17.Name = "GtkLabel17";
			this.GtkLabel17.LabelProp = global::Mono.Unix.Catalog.GetString ("Options");
			this.GtkLabel17.UseUnderline = true;
			this.expander1.LabelWidget = this.GtkLabel17;
			w1.Add (this.expander1);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(w1 [this.expander1]));
			w12.Position = 1;
			w12.Expand = false;
			w12.Fill = false;
			w12.Padding = ((uint)(6));
			// Internal child ocmgtk.ImportDialog.ActionArea
			global::Gtk.HButtonBox w13 = this.ActionArea;
			w13.Name = "dialog1_ActionArea";
			w13.Spacing = 10;
			w13.BorderWidth = ((uint)(5));
			w13.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w14 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w13 [this.buttonCancel]));
			w14.Expand = false;
			w14.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-open";
			this.AddActionWidget (this.buttonOk, -3);
			global::Gtk.ButtonBox.ButtonBoxChild w15 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w13 [this.buttonOk]));
			w15.Position = 1;
			w15.Expand = false;
			w15.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 721;
			this.DefaultHeight = 527;
			this.Show ();
			this.fileWidget.FileActivated += new global::System.EventHandler (this.OnFileActivated);
			this.addToListCheck.Toggled += new global::System.EventHandler (this.OnAddToBmrkToggle);
			this.addBmrkButton.Clicked += new global::System.EventHandler (this.OnAddClicked);
			this.buttonCancel.Clicked += new global::System.EventHandler (this.OnCancelClicked);
			this.buttonOk.Clicked += new global::System.EventHandler (this.OnOkClicked);
		}
	}
}


// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class DelormeGPXWidget
	{
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.Table table1;
		
		private global::Gtk.CheckButton limitCheck;
		
		private global::Gtk.Entry limitEntry;
		
		private global::Gtk.CheckButton logLimitCheck;
		
		private global::Gtk.Entry logLimitEntry;
		
		private global::Gtk.Table table2;
		
		private global::Gtk.CheckButton attrCheck;
		
		private global::Gtk.RadioButton autoNameRado;
		
		private global::Gtk.Button fieldBrowseButton;
		
		private global::Gtk.Image image21;
		
		private global::Gtk.Entry fieldNotesEntry;
		
		private global::Gtk.Button fileButton;
		
		private global::Gtk.Image image3;
		
		private global::Gtk.Entry fileEntry;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.RadioButton useFileRadio;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.DelormeGPXWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.DelormeGPXWidget";
			// Container child ocmgtk.DelormeGPXWidget.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.limitCheck = new global::Gtk.CheckButton ();
			this.limitCheck.CanFocus = true;
			this.limitCheck.Name = "limitCheck";
			this.limitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Caches");
			this.limitCheck.Active = true;
			this.limitCheck.DrawIndicator = true;
			this.limitCheck.UseUnderline = true;
			this.table1.Add (this.limitCheck);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitCheck]));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitEntry = new global::Gtk.Entry ();
			this.limitEntry.CanFocus = true;
			this.limitEntry.Name = "limitEntry";
			this.limitEntry.Text = "1000";
			this.limitEntry.IsEditable = true;
			this.limitEntry.InvisibleChar = '•';
			this.table1.Add (this.limitEntry);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitEntry]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.logLimitCheck = new global::Gtk.CheckButton ();
			this.logLimitCheck.CanFocus = true;
			this.logLimitCheck.Name = "logLimitCheck";
			this.logLimitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Logs");
			this.logLimitCheck.DrawIndicator = true;
			this.logLimitCheck.UseUnderline = true;
			this.table1.Add (this.logLimitCheck);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.logLimitCheck]));
			w3.TopAttach = ((uint)(1));
			w3.BottomAttach = ((uint)(2));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.logLimitEntry = new global::Gtk.Entry ();
			this.logLimitEntry.Sensitive = false;
			this.logLimitEntry.CanFocus = true;
			this.logLimitEntry.Name = "logLimitEntry";
			this.logLimitEntry.Text = global::Mono.Unix.Catalog.GetString ("5");
			this.logLimitEntry.IsEditable = true;
			this.logLimitEntry.InvisibleChar = '•';
			this.table1.Add (this.logLimitEntry);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.logLimitEntry]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox1.Add (this.table1);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.table1]));
			w5.Position = 0;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.table2 = new global::Gtk.Table (((uint)(4)), ((uint)(3)), false);
			this.table2.Name = "table2";
			this.table2.RowSpacing = ((uint)(6));
			this.table2.ColumnSpacing = ((uint)(6));
			// Container child table2.Gtk.Table+TableChild
			this.attrCheck = new global::Gtk.CheckButton ();
			this.attrCheck.CanFocus = true;
			this.attrCheck.Name = "attrCheck";
			this.attrCheck.Label = global::Mono.Unix.Catalog.GetString ("Include Attributes in Description");
			this.attrCheck.Active = true;
			this.attrCheck.DrawIndicator = true;
			this.attrCheck.UseUnderline = true;
			this.table2.Add (this.attrCheck);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table2 [this.attrCheck]));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.autoNameRado = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Auto name on internal drive"));
			this.autoNameRado.CanFocus = true;
			this.autoNameRado.Name = "autoNameRado";
			this.autoNameRado.DrawIndicator = true;
			this.autoNameRado.UseUnderline = true;
			this.autoNameRado.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.table2.Add (this.autoNameRado);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table2 [this.autoNameRado]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.fieldBrowseButton = new global::Gtk.Button ();
			this.fieldBrowseButton.CanFocus = true;
			this.fieldBrowseButton.Name = "fieldBrowseButton";
			// Container child fieldBrowseButton.Gtk.Container+ContainerChild
			this.image21 = new global::Gtk.Image ();
			this.image21.Name = "image21";
			this.image21.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-open", global::Gtk.IconSize.Button);
			this.fieldBrowseButton.Add (this.image21);
			this.table2.Add (this.fieldBrowseButton);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table2 [this.fieldBrowseButton]));
			w9.TopAttach = ((uint)(3));
			w9.BottomAttach = ((uint)(4));
			w9.LeftAttach = ((uint)(2));
			w9.RightAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.fieldNotesEntry = new global::Gtk.Entry ();
			this.fieldNotesEntry.CanFocus = true;
			this.fieldNotesEntry.Name = "fieldNotesEntry";
			this.fieldNotesEntry.Text = "/media/EM_USERMAPS/FieldNotes.txt";
			this.fieldNotesEntry.IsEditable = true;
			this.fieldNotesEntry.InvisibleChar = '•';
			this.table2.Add (this.fieldNotesEntry);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table2 [this.fieldNotesEntry]));
			w10.TopAttach = ((uint)(3));
			w10.BottomAttach = ((uint)(4));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.fileButton = new global::Gtk.Button ();
			this.fileButton.CanFocus = true;
			this.fileButton.Name = "fileButton";
			// Container child fileButton.Gtk.Container+ContainerChild
			this.image3 = new global::Gtk.Image ();
			this.image3.Name = "image3";
			this.image3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-open", global::Gtk.IconSize.Menu);
			this.fileButton.Add (this.image3);
			this.table2.Add (this.fileButton);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table2 [this.fileButton]));
			w12.TopAttach = ((uint)(2));
			w12.BottomAttach = ((uint)(3));
			w12.LeftAttach = ((uint)(2));
			w12.RightAttach = ((uint)(3));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.fileEntry = new global::Gtk.Entry ();
			this.fileEntry.Sensitive = false;
			this.fileEntry.CanFocus = true;
			this.fileEntry.Name = "fileEntry";
			this.fileEntry.Text = "/media/EM_USERMAPS/waypoints/geocaches.gpx";
			this.fileEntry.IsEditable = true;
			this.fileEntry.InvisibleChar = '•';
			this.table2.Add (this.fileEntry);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table2 [this.fileEntry]));
			w13.TopAttach = ((uint)(2));
			w13.BottomAttach = ((uint)(3));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Field Notes File:");
			this.table2.Add (this.label1);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table2 [this.label1]));
			w14.TopAttach = ((uint)(3));
			w14.BottomAttach = ((uint)(4));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.useFileRadio = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Use specified file:"));
			this.useFileRadio.CanFocus = true;
			this.useFileRadio.Name = "useFileRadio";
			this.useFileRadio.DrawIndicator = true;
			this.useFileRadio.UseUnderline = true;
			this.useFileRadio.Group = this.autoNameRado.Group;
			this.table2.Add (this.useFileRadio);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table2 [this.useFileRadio]));
			w15.TopAttach = ((uint)(2));
			w15.BottomAttach = ((uint)(3));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox1.Add (this.table2);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.table2]));
			w16.Position = 1;
			w16.Expand = false;
			w16.Fill = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.logLimitCheck.Toggled += new global::System.EventHandler (this.OnLogLimitToggle);
			this.limitCheck.Toggled += new global::System.EventHandler (this.OnLimitToggle);
			this.useFileRadio.Toggled += new global::System.EventHandler (this.OnFileToggle);
			this.fileButton.Clicked += new global::System.EventHandler (this.OnFileClick);
			this.fieldBrowseButton.Clicked += new global::System.EventHandler (this.OnFieldBrowse);
		}
	}
}

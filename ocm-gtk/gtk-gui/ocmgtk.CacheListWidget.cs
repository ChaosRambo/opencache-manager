
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class CacheListWidget
	{
		private global::Gtk.VBox cacheListContents;
		
		private global::Gtk.HBox hbox2;
		
		private global::Gtk.Image searchImage;
		
		private global::Gtk.Entry nameEntry;
		
		private global::Gtk.Button clearNameButton;
		
		private global::Gtk.Image clearImage2;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.Image distanceImage;
		
		private global::Gtk.Entry distanceEntry;
		
		private global::Gtk.Label distanceLabel;
		
		private global::Gtk.Button clearDistanceButton;
		
		private global::Gtk.Image clearImage;
		
		private global::Gtk.Alignment statusAlign;
		
		private global::Gtk.Button statusInfo;
		
		private global::Gtk.HBox hbox3;
		
		private global::Gtk.Image image317;
		
		private global::Gtk.Label infoStatus;
		
		private global::Gtk.Table statusTable;
		
		private global::Gtk.CheckButton archiveCheck;
		
		private global::Gtk.CheckButton availCheck;
		
		private global::Gtk.CheckButton foundCheck;
		
		private global::Gtk.CheckButton mineCheck;
		
		private global::Gtk.CheckButton notAvailCheck;
		
		private global::Gtk.CheckButton notFoundCheck;
		
		private global::Gtk.ScrolledWindow cacheListScroll;
		
		private global::Gtk.TreeView cacheListTree;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.CacheListWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.CacheListWidget";
			// Container child ocmgtk.CacheListWidget.Gtk.Container+ContainerChild
			this.cacheListContents = new global::Gtk.VBox ();
			this.cacheListContents.Name = "cacheListContents";
			this.cacheListContents.Spacing = 6;
			this.cacheListContents.BorderWidth = ((uint)(6));
			// Container child cacheListContents.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.searchImage = new global::Gtk.Image ();
			this.searchImage.Name = "searchImage";
			this.searchImage.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.SearchIcon.svg");
			this.hbox2.Add (this.searchImage);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.searchImage]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.nameEntry = new global::Gtk.Entry ();
			this.nameEntry.CanFocus = true;
			this.nameEntry.Name = "nameEntry";
			this.nameEntry.IsEditable = true;
			this.nameEntry.InvisibleChar = '●';
			this.hbox2.Add (this.nameEntry);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.nameEntry]));
			w2.Position = 1;
			// Container child hbox2.Gtk.Box+BoxChild
			this.clearNameButton = new global::Gtk.Button ();
			this.clearNameButton.Sensitive = false;
			this.clearNameButton.CanFocus = true;
			this.clearNameButton.Name = "clearNameButton";
			// Container child clearNameButton.Gtk.Container+ContainerChild
			this.clearImage2 = new global::Gtk.Image ();
			this.clearImage2.Name = "clearImage2";
			this.clearImage2.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-clear", global::Gtk.IconSize.Menu);
			this.clearNameButton.Add (this.clearImage2);
			this.hbox2.Add (this.clearNameButton);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.clearNameButton]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			this.cacheListContents.Add (this.hbox2);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.cacheListContents [this.hbox2]));
			w5.Position = 0;
			w5.Expand = false;
			w5.Fill = false;
			// Container child cacheListContents.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.distanceImage = new global::Gtk.Image ();
			this.distanceImage.Name = "distanceImage";
			this.distanceImage.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("ocmgtk.icons.scalable.DistIcon.svg");
			this.hbox1.Add (this.distanceImage);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.distanceImage]));
			w6.Position = 0;
			w6.Expand = false;
			w6.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.distanceEntry = new global::Gtk.Entry ();
			this.distanceEntry.CanFocus = true;
			this.distanceEntry.Name = "distanceEntry";
			this.distanceEntry.IsEditable = true;
			this.distanceEntry.InvisibleChar = '●';
			this.hbox1.Add (this.distanceEntry);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.distanceEntry]));
			w7.Position = 1;
			// Container child hbox1.Gtk.Box+BoxChild
			this.distanceLabel = new global::Gtk.Label ();
			this.distanceLabel.Name = "distanceLabel";
			this.distanceLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("km");
			this.hbox1.Add (this.distanceLabel);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.distanceLabel]));
			w8.Position = 2;
			w8.Expand = false;
			w8.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.clearDistanceButton = new global::Gtk.Button ();
			this.clearDistanceButton.Sensitive = false;
			this.clearDistanceButton.CanFocus = true;
			this.clearDistanceButton.Name = "clearDistanceButton";
			// Container child clearDistanceButton.Gtk.Container+ContainerChild
			this.clearImage = new global::Gtk.Image ();
			this.clearImage.Name = "clearImage";
			this.clearImage.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-clear", global::Gtk.IconSize.Menu);
			this.clearDistanceButton.Add (this.clearImage);
			this.hbox1.Add (this.clearDistanceButton);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.clearDistanceButton]));
			w10.Position = 3;
			w10.Expand = false;
			w10.Fill = false;
			this.cacheListContents.Add (this.hbox1);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.cacheListContents [this.hbox1]));
			w11.Position = 1;
			w11.Expand = false;
			w11.Fill = false;
			// Container child cacheListContents.Gtk.Box+BoxChild
			this.statusAlign = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.statusAlign.Name = "statusAlign";
			// Container child statusAlign.Gtk.Container+ContainerChild
			this.statusInfo = new global::Gtk.Button ();
			this.statusInfo.Sensitive = false;
			this.statusInfo.CanFocus = true;
			this.statusInfo.Name = "statusInfo";
			this.statusInfo.FocusOnClick = false;
			this.statusInfo.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child statusInfo.Gtk.Container+ContainerChild
			this.hbox3 = new global::Gtk.HBox ();
			this.hbox3.Name = "hbox3";
			this.hbox3.Spacing = 6;
			// Container child hbox3.Gtk.Box+BoxChild
			this.image317 = new global::Gtk.Image ();
			this.image317.Name = "image317";
			this.image317.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-info", global::Gtk.IconSize.Menu);
			this.hbox3.Add (this.image317);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.image317]));
			w12.Position = 0;
			w12.Expand = false;
			w12.Fill = false;
			// Container child hbox3.Gtk.Box+BoxChild
			this.infoStatus = new global::Gtk.Label ();
			this.infoStatus.Name = "infoStatus";
			this.infoStatus.LabelProp = global::Mono.Unix.Catalog.GetString ("Loading...");
			this.hbox3.Add (this.infoStatus);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.infoStatus]));
			w13.Position = 1;
			w13.Expand = false;
			w13.Fill = false;
			this.statusInfo.Add (this.hbox3);
			this.statusAlign.Add (this.statusInfo);
			this.cacheListContents.Add (this.statusAlign);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.cacheListContents [this.statusAlign]));
			w16.Position = 2;
			w16.Expand = false;
			w16.Fill = false;
			// Container child cacheListContents.Gtk.Box+BoxChild
			this.statusTable = new global::Gtk.Table (((uint)(2)), ((uint)(3)), false);
			this.statusTable.Name = "statusTable";
			this.statusTable.RowSpacing = ((uint)(6));
			this.statusTable.ColumnSpacing = ((uint)(6));
			// Container child statusTable.Gtk.Table+TableChild
			this.archiveCheck = new global::Gtk.CheckButton ();
			this.archiveCheck.CanFocus = true;
			this.archiveCheck.Name = "archiveCheck";
			this.archiveCheck.Label = global::Mono.Unix.Catalog.GetString ("Archived");
			this.archiveCheck.Active = true;
			this.archiveCheck.DrawIndicator = true;
			this.archiveCheck.UseUnderline = true;
			this.statusTable.Add (this.archiveCheck);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.statusTable [this.archiveCheck]));
			w17.TopAttach = ((uint)(1));
			w17.BottomAttach = ((uint)(2));
			w17.LeftAttach = ((uint)(2));
			w17.RightAttach = ((uint)(3));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child statusTable.Gtk.Table+TableChild
			this.availCheck = new global::Gtk.CheckButton ();
			this.availCheck.CanFocus = true;
			this.availCheck.Name = "availCheck";
			this.availCheck.Label = global::Mono.Unix.Catalog.GetString ("Available");
			this.availCheck.Active = true;
			this.availCheck.DrawIndicator = true;
			this.availCheck.UseUnderline = true;
			this.statusTable.Add (this.availCheck);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.statusTable [this.availCheck]));
			w18.TopAttach = ((uint)(1));
			w18.BottomAttach = ((uint)(2));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child statusTable.Gtk.Table+TableChild
			this.foundCheck = new global::Gtk.CheckButton ();
			this.foundCheck.CanFocus = true;
			this.foundCheck.Name = "foundCheck";
			this.foundCheck.Label = global::Mono.Unix.Catalog.GetString ("Found");
			this.foundCheck.Active = true;
			this.foundCheck.DrawIndicator = true;
			this.foundCheck.UseUnderline = true;
			this.statusTable.Add (this.foundCheck);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.statusTable [this.foundCheck]));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child statusTable.Gtk.Table+TableChild
			this.mineCheck = new global::Gtk.CheckButton ();
			this.mineCheck.CanFocus = true;
			this.mineCheck.Name = "mineCheck";
			this.mineCheck.Label = global::Mono.Unix.Catalog.GetString ("Mine");
			this.mineCheck.Active = true;
			this.mineCheck.DrawIndicator = true;
			this.mineCheck.UseUnderline = true;
			this.statusTable.Add (this.mineCheck);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.statusTable [this.mineCheck]));
			w20.LeftAttach = ((uint)(2));
			w20.RightAttach = ((uint)(3));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child statusTable.Gtk.Table+TableChild
			this.notAvailCheck = new global::Gtk.CheckButton ();
			this.notAvailCheck.CanFocus = true;
			this.notAvailCheck.Name = "notAvailCheck";
			this.notAvailCheck.Label = global::Mono.Unix.Catalog.GetString ("Not Available");
			this.notAvailCheck.Active = true;
			this.notAvailCheck.DrawIndicator = true;
			this.notAvailCheck.UseUnderline = true;
			this.statusTable.Add (this.notAvailCheck);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.statusTable [this.notAvailCheck]));
			w21.TopAttach = ((uint)(1));
			w21.BottomAttach = ((uint)(2));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child statusTable.Gtk.Table+TableChild
			this.notFoundCheck = new global::Gtk.CheckButton ();
			this.notFoundCheck.CanFocus = true;
			this.notFoundCheck.Name = "notFoundCheck";
			this.notFoundCheck.Label = global::Mono.Unix.Catalog.GetString ("Not Found");
			this.notFoundCheck.Active = true;
			this.notFoundCheck.DrawIndicator = true;
			this.notFoundCheck.UseUnderline = true;
			this.statusTable.Add (this.notFoundCheck);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.statusTable [this.notFoundCheck]));
			w22.LeftAttach = ((uint)(1));
			w22.RightAttach = ((uint)(2));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			this.cacheListContents.Add (this.statusTable);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.cacheListContents [this.statusTable]));
			w23.Position = 3;
			w23.Expand = false;
			w23.Fill = false;
			// Container child cacheListContents.Gtk.Box+BoxChild
			this.cacheListScroll = new global::Gtk.ScrolledWindow ();
			this.cacheListScroll.CanFocus = true;
			this.cacheListScroll.Name = "cacheListScroll";
			this.cacheListScroll.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child cacheListScroll.Gtk.Container+ContainerChild
			this.cacheListTree = new global::Gtk.TreeView ();
			this.cacheListTree.CanFocus = true;
			this.cacheListTree.Name = "cacheListTree";
			this.cacheListTree.EnableSearch = false;
			this.cacheListScroll.Add (this.cacheListTree);
			this.cacheListContents.Add (this.cacheListScroll);
			global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.cacheListContents [this.cacheListScroll]));
			w25.Position = 4;
			this.Add (this.cacheListContents);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.statusInfo.Hide ();
			this.Hide ();
			this.nameEntry.Changed += new global::System.EventHandler (this.OnChanged);
			this.nameEntry.Activated += new global::System.EventHandler (this.OnNameActivated);
			this.clearNameButton.Clicked += new global::System.EventHandler (this.OnClearNameClick);
			this.distanceEntry.Changed += new global::System.EventHandler (this.OnChanged);
			this.distanceEntry.Activated += new global::System.EventHandler (this.OnDistActivated);
			this.clearDistanceButton.Clicked += new global::System.EventHandler (this.OnClearDistClicked);
			this.statusInfo.Clicked += new global::System.EventHandler (this.OnStatusClick);
			this.notFoundCheck.Toggled += new global::System.EventHandler (this.OnFoundStatusToggle);
			this.notAvailCheck.Toggled += new global::System.EventHandler (this.OnAvailStatusToggle);
			this.mineCheck.Toggled += new global::System.EventHandler (this.OnFoundStatusToggle);
			this.foundCheck.Toggled += new global::System.EventHandler (this.OnFoundStatusToggle);
			this.availCheck.Toggled += new global::System.EventHandler (this.OnAvailStatusToggle);
			this.archiveCheck.Toggled += new global::System.EventHandler (this.OnAvailStatusToggle);
			this.cacheListTree.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler (this.OnButtonPress);
		}
	}
}

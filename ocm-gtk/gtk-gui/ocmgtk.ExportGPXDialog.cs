
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class ExportGPXDialog
	{
		private global::Gtk.Notebook notebook1;
		
		private global::Gtk.Alignment alignment1;
		
		private global::Gtk.FileChooserWidget fileChooser;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.VBox vbox4;
		
		private global::Gtk.Frame frame4;
		
		private global::Gtk.Alignment GtkAlignment15;
		
		private global::Gtk.VBox vbox5;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.CheckButton limitCheck;
		
		private global::Gtk.Entry limitEntry;
		
		private global::Gtk.CheckButton includeChildrenCheck;
		
		private global::Gtk.CheckButton exportPaperlessDetails;
		
		private global::Gtk.CheckButton checkbutton1;
		
		private global::Gtk.CheckButton customSymbolsCheck;
		
		private global::Gtk.Label GtkLabel25;
		
		private global::Gtk.Frame paperlessFrame;
		
		private global::Gtk.Alignment GtkAlignment12;
		
		private global::Gtk.Table table5;
		
		private global::Gtk.CheckButton attrCheck;
		
		private global::Gtk.CheckButton logLimitCheck;
		
		private global::Gtk.Entry logLimitEntry;
		
		private global::Gtk.CheckButton usePlainTextCheck;
		
		private global::Gtk.Label GtkLabel20;
		
		private global::Gtk.Frame waypointFrame;
		
		private global::Gtk.Alignment GtkAlignment11;
		
		private global::Gtk.Table table3;
		
		private global::Gtk.ComboBox descMode;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.ComboBox nameMode;
		
		private global::Gtk.Label GtkLabel21;
		
		private global::Gtk.Label label4;
		
		private global::ocmgtk.WaypointOverrideWidget waypointSymbolWidget;
		
		private global::Gtk.Label symbolsPage;
		
		private global::Gtk.Button buttonCancel;
		
		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.ExportGPXDialog
			this.WidthRequest = 750;
			this.HeightRequest = 500;
			this.Name = "ocmgtk.ExportGPXDialog";
			this.Title = global::Mono.Unix.Catalog.GetString ("Export GPX...");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.BorderWidth = ((uint)(6));
			this.Resizable = false;
			this.AllowGrow = false;
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child ocmgtk.ExportGPXDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.notebook1 = new global::Gtk.Notebook ();
			this.notebook1.CanFocus = true;
			this.notebook1.Name = "notebook1";
			this.notebook1.CurrentPage = 1;
			this.notebook1.TabPos = ((global::Gtk.PositionType)(0));
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.alignment1 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment1.Name = "alignment1";
			this.alignment1.BorderWidth = ((uint)(6));
			// Container child alignment1.Gtk.Container+ContainerChild
			this.fileChooser = new global::Gtk.FileChooserWidget (((global::Gtk.FileChooserAction)(1)));
			this.fileChooser.Name = "fileChooser";
			this.fileChooser.DoOverwriteConfirmation = true;
			this.alignment1.Add (this.fileChooser);
			this.notebook1.Add (this.alignment1);
			// Notebook tab
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("File");
			this.notebook1.SetTabLabel (this.alignment1, this.label2);
			this.label2.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.frame4 = new global::Gtk.Frame ();
			this.frame4.Name = "frame4";
			this.frame4.ShadowType = ((global::Gtk.ShadowType)(0));
			this.frame4.BorderWidth = ((uint)(6));
			// Container child frame4.Gtk.Container+ContainerChild
			this.GtkAlignment15 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment15.Name = "GtkAlignment15";
			this.GtkAlignment15.LeftPadding = ((uint)(12));
			// Container child GtkAlignment15.Gtk.Container+ContainerChild
			this.vbox5 = new global::Gtk.VBox ();
			this.vbox5.Name = "vbox5";
			this.vbox5.Spacing = 6;
			// Container child vbox5.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.limitCheck = new global::Gtk.CheckButton ();
			this.limitCheck.CanFocus = true;
			this.limitCheck.Name = "limitCheck";
			this.limitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Geocaches");
			this.limitCheck.DrawIndicator = true;
			this.limitCheck.UseUnderline = true;
			this.hbox1.Add (this.limitCheck);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.limitCheck]));
			w4.Position = 0;
			w4.Expand = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.limitEntry = new global::Gtk.Entry ();
			this.limitEntry.CanFocus = true;
			this.limitEntry.Name = "limitEntry";
			this.limitEntry.Text = "1000";
			this.limitEntry.IsEditable = true;
			this.limitEntry.InvisibleChar = 'â€¢';
			this.hbox1.Add (this.limitEntry);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.limitEntry]));
			w5.Position = 1;
			this.vbox5.Add (this.hbox1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.hbox1]));
			w6.Position = 0;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.includeChildrenCheck = new global::Gtk.CheckButton ();
			this.includeChildrenCheck.CanFocus = true;
			this.includeChildrenCheck.Name = "includeChildrenCheck";
			this.includeChildrenCheck.Label = global::Mono.Unix.Catalog.GetString ("Include Child Waypoints");
			this.includeChildrenCheck.Active = true;
			this.includeChildrenCheck.DrawIndicator = true;
			this.includeChildrenCheck.UseUnderline = true;
			this.vbox5.Add (this.includeChildrenCheck);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.includeChildrenCheck]));
			w7.Position = 1;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.exportPaperlessDetails = new global::Gtk.CheckButton ();
			this.exportPaperlessDetails.CanFocus = true;
			this.exportPaperlessDetails.Name = "exportPaperlessDetails";
			this.exportPaperlessDetails.Label = global::Mono.Unix.Catalog.GetString ("Export Paperless Caching Details");
			this.exportPaperlessDetails.Active = true;
			this.exportPaperlessDetails.DrawIndicator = true;
			this.exportPaperlessDetails.UseUnderline = true;
			this.vbox5.Add (this.exportPaperlessDetails);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.exportPaperlessDetails]));
			w8.Position = 2;
			w8.Expand = false;
			w8.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.checkbutton1 = new global::Gtk.CheckButton ();
			this.checkbutton1.Sensitive = false;
			this.checkbutton1.CanFocus = true;
			this.checkbutton1.Name = "checkbutton1";
			this.checkbutton1.Label = global::Mono.Unix.Catalog.GetString ("Export Extra Fields in GPX");
			this.checkbutton1.DrawIndicator = true;
			this.checkbutton1.UseUnderline = true;
			this.vbox5.Add (this.checkbutton1);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.checkbutton1]));
			w9.Position = 3;
			w9.Expand = false;
			w9.Fill = false;
			// Container child vbox5.Gtk.Box+BoxChild
			this.customSymbolsCheck = new global::Gtk.CheckButton ();
			this.customSymbolsCheck.CanFocus = true;
			this.customSymbolsCheck.Name = "customSymbolsCheck";
			this.customSymbolsCheck.Label = global::Mono.Unix.Catalog.GetString ("Use Custom Waypoint Symbols");
			this.customSymbolsCheck.DrawIndicator = true;
			this.customSymbolsCheck.UseUnderline = true;
			this.vbox5.Add (this.customSymbolsCheck);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox5 [this.customSymbolsCheck]));
			w10.Position = 4;
			w10.Expand = false;
			w10.Fill = false;
			this.GtkAlignment15.Add (this.vbox5);
			this.frame4.Add (this.GtkAlignment15);
			this.GtkLabel25 = new global::Gtk.Label ();
			this.GtkLabel25.Name = "GtkLabel25";
			this.GtkLabel25.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>General</b>");
			this.GtkLabel25.UseMarkup = true;
			this.frame4.LabelWidget = this.GtkLabel25;
			this.vbox4.Add (this.frame4);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.frame4]));
			w13.Position = 0;
			w13.Expand = false;
			w13.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.paperlessFrame = new global::Gtk.Frame ();
			this.paperlessFrame.Name = "paperlessFrame";
			this.paperlessFrame.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child paperlessFrame.Gtk.Container+ContainerChild
			this.GtkAlignment12 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment12.Name = "GtkAlignment12";
			this.GtkAlignment12.LeftPadding = ((uint)(12));
			// Container child GtkAlignment12.Gtk.Container+ContainerChild
			this.table5 = new global::Gtk.Table (((uint)(3)), ((uint)(2)), false);
			this.table5.Name = "table5";
			this.table5.RowSpacing = ((uint)(6));
			this.table5.ColumnSpacing = ((uint)(6));
			this.table5.BorderWidth = ((uint)(6));
			// Container child table5.Gtk.Table+TableChild
			this.attrCheck = new global::Gtk.CheckButton ();
			this.attrCheck.CanFocus = true;
			this.attrCheck.Name = "attrCheck";
			this.attrCheck.Label = global::Mono.Unix.Catalog.GetString ("Include Attributes in Description");
			this.attrCheck.DrawIndicator = true;
			this.attrCheck.UseUnderline = true;
			this.table5.Add (this.attrCheck);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table5 [this.attrCheck]));
			w14.TopAttach = ((uint)(1));
			w14.BottomAttach = ((uint)(2));
			w14.RightAttach = ((uint)(2));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table5.Gtk.Table+TableChild
			this.logLimitCheck = new global::Gtk.CheckButton ();
			this.logLimitCheck.CanFocus = true;
			this.logLimitCheck.Name = "logLimitCheck";
			this.logLimitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Logs");
			this.logLimitCheck.DrawIndicator = true;
			this.logLimitCheck.UseUnderline = true;
			this.table5.Add (this.logLimitCheck);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table5 [this.logLimitCheck]));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table5.Gtk.Table+TableChild
			this.logLimitEntry = new global::Gtk.Entry ();
			this.logLimitEntry.Sensitive = false;
			this.logLimitEntry.CanFocus = true;
			this.logLimitEntry.Name = "logLimitEntry";
			this.logLimitEntry.Text = global::Mono.Unix.Catalog.GetString ("5");
			this.logLimitEntry.IsEditable = true;
			this.logLimitEntry.InvisibleChar = 'â€¢';
			this.table5.Add (this.logLimitEntry);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table5 [this.logLimitEntry]));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table5.Gtk.Table+TableChild
			this.usePlainTextCheck = new global::Gtk.CheckButton ();
			this.usePlainTextCheck.CanFocus = true;
			this.usePlainTextCheck.Name = "usePlainTextCheck";
			this.usePlainTextCheck.Label = global::Mono.Unix.Catalog.GetString ("Convert HTML to Plain Text");
			this.usePlainTextCheck.DrawIndicator = true;
			this.usePlainTextCheck.UseUnderline = true;
			this.table5.Add (this.usePlainTextCheck);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.table5 [this.usePlainTextCheck]));
			w17.TopAttach = ((uint)(2));
			w17.BottomAttach = ((uint)(3));
			w17.RightAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			this.GtkAlignment12.Add (this.table5);
			this.paperlessFrame.Add (this.GtkAlignment12);
			this.GtkLabel20 = new global::Gtk.Label ();
			this.GtkLabel20.Name = "GtkLabel20";
			this.GtkLabel20.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Paperless Options</b>");
			this.GtkLabel20.UseMarkup = true;
			this.paperlessFrame.LabelWidget = this.GtkLabel20;
			this.vbox4.Add (this.paperlessFrame);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.paperlessFrame]));
			w20.Position = 1;
			w20.Expand = false;
			w20.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.waypointFrame = new global::Gtk.Frame ();
			this.waypointFrame.Name = "waypointFrame";
			this.waypointFrame.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child waypointFrame.Gtk.Container+ContainerChild
			this.GtkAlignment11 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment11.Name = "GtkAlignment11";
			this.GtkAlignment11.LeftPadding = ((uint)(12));
			// Container child GtkAlignment11.Gtk.Container+ContainerChild
			this.table3 = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.table3.Name = "table3";
			this.table3.RowSpacing = ((uint)(6));
			this.table3.ColumnSpacing = ((uint)(6));
			this.table3.BorderWidth = ((uint)(6));
			// Container child table3.Gtk.Table+TableChild
			this.descMode = global::Gtk.ComboBox.NewText ();
			this.descMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Name"));
			this.descMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code/Size/Hint"));
			this.descMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code/Size/Type"));
			this.descMode.Name = "descMode";
			this.descMode.Active = 0;
			this.table3.Add (this.descMode);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.table3 [this.descMode]));
			w21.TopAttach = ((uint)(1));
			w21.BottomAttach = ((uint)(2));
			w21.LeftAttach = ((uint)(1));
			w21.RightAttach = ((uint)(2));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Name Format:");
			this.table3.Add (this.label1);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.table3 [this.label1]));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.Xalign = 0F;
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Description Format:");
			this.table3.Add (this.label5);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.table3 [this.label5]));
			w23.TopAttach = ((uint)(1));
			w23.BottomAttach = ((uint)(2));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			w23.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.nameMode = global::Gtk.ComboBox.NewText ();
			this.nameMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Code"));
			this.nameMode.AppendText (global::Mono.Unix.Catalog.GetString ("Cache Name"));
			this.nameMode.Name = "nameMode";
			this.nameMode.Active = 0;
			this.table3.Add (this.nameMode);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.table3 [this.nameMode]));
			w24.LeftAttach = ((uint)(1));
			w24.RightAttach = ((uint)(2));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			this.GtkAlignment11.Add (this.table3);
			this.waypointFrame.Add (this.GtkAlignment11);
			this.GtkLabel21 = new global::Gtk.Label ();
			this.GtkLabel21.Name = "GtkLabel21";
			this.GtkLabel21.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Waypoint Options</b>");
			this.GtkLabel21.UseMarkup = true;
			this.waypointFrame.LabelWidget = this.GtkLabel21;
			this.vbox4.Add (this.waypointFrame);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.waypointFrame]));
			w27.Position = 2;
			w27.Expand = false;
			w27.Fill = false;
			this.notebook1.Add (this.vbox4);
			global::Gtk.Notebook.NotebookChild w28 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox4]));
			w28.Position = 1;
			// Notebook tab
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("Options");
			this.notebook1.SetTabLabel (this.vbox4, this.label4);
			this.label4.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.waypointSymbolWidget = null;
			this.notebook1.Add (this.waypointSymbolWidget);
			global::Gtk.Notebook.NotebookChild w29 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.waypointSymbolWidget]));
			w29.Position = 2;
			// Notebook tab
			this.symbolsPage = new global::Gtk.Label ();
			this.symbolsPage.Name = "symbolsPage";
			this.symbolsPage.LabelProp = global::Mono.Unix.Catalog.GetString ("Waypoint Symbols");
			this.notebook1.SetTabLabel (this.waypointSymbolWidget, this.symbolsPage);
			this.symbolsPage.ShowAll ();
			w1.Add (this.notebook1);
			global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(w1 [this.notebook1]));
			w30.Position = 0;
			// Internal child ocmgtk.ExportGPXDialog.ActionArea
			global::Gtk.HButtonBox w31 = this.ActionArea;
			w31.Name = "dialog1_ActionArea";
			w31.Spacing = 10;
			w31.BorderWidth = ((uint)(5));
			w31.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w32 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w31 [this.buttonCancel]));
			w32.Expand = false;
			w32.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget (this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w33 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w31 [this.buttonOk]));
			w33.Position = 1;
			w33.Expand = false;
			w33.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 762;
			this.DefaultHeight = 527;
			this.Show ();
			this.limitCheck.Toggled += new global::System.EventHandler (this.OnLimitToggle);
			this.exportPaperlessDetails.Toggled += new global::System.EventHandler (this.OnPaperlessToggle);
			this.logLimitCheck.Toggled += new global::System.EventHandler (this.OnLogLimitToggle);
		}
	}
}

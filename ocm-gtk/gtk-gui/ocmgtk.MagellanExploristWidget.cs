
// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class MagellanExploristWidget
	{
		private global::Gtk.VBox vbox3;
		
		private global::Gtk.HBox hbox3;
		
		private global::Gtk.CheckButton limitCheck;
		
		private global::Gtk.Entry limitEntry;
		
		private global::Gtk.HBox hbox4;
		
		private global::Gtk.Label label3;
		
		private global::Gtk.Entry fileEntry;
		
		private global::Gtk.Button fileButton;
		
		private global::Gtk.Image image3;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.MagellanExploristWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.MagellanExploristWidget";
			// Container child ocmgtk.MagellanExploristWidget.Gtk.Container+ContainerChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			this.vbox3.BorderWidth = ((uint)(6));
			// Container child vbox3.Gtk.Box+BoxChild
			this.hbox3 = new global::Gtk.HBox ();
			this.hbox3.Name = "hbox3";
			this.hbox3.Spacing = 6;
			// Container child hbox3.Gtk.Box+BoxChild
			this.limitCheck = new global::Gtk.CheckButton ();
			this.limitCheck.CanFocus = true;
			this.limitCheck.Name = "limitCheck";
			this.limitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Caches");
			this.limitCheck.DrawIndicator = true;
			this.limitCheck.UseUnderline = true;
			this.hbox3.Add (this.limitCheck);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.limitCheck]));
			w1.Position = 0;
			w1.Expand = false;
			// Container child hbox3.Gtk.Box+BoxChild
			this.limitEntry = new global::Gtk.Entry ();
			this.limitEntry.Sensitive = false;
			this.limitEntry.CanFocus = true;
			this.limitEntry.Name = "limitEntry";
			this.limitEntry.Text = "1000";
			this.limitEntry.IsEditable = true;
			this.limitEntry.InvisibleChar = '•';
			this.hbox3.Add (this.limitEntry);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.limitEntry]));
			w2.Position = 1;
			this.vbox3.Add (this.hbox3);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hbox3]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hbox4 = new global::Gtk.HBox ();
			this.hbox4.Name = "hbox4";
			this.hbox4.Spacing = 6;
			// Container child hbox4.Gtk.Box+BoxChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("Serial Port or File:");
			this.hbox4.Add (this.label3);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.label3]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Container child hbox4.Gtk.Box+BoxChild
			this.fileEntry = new global::Gtk.Entry ();
			this.fileEntry.CanFocus = true;
			this.fileEntry.Name = "fileEntry";
			this.fileEntry.Text = "/dev/ttyS0";
			this.fileEntry.IsEditable = true;
			this.fileEntry.InvisibleChar = '•';
			this.hbox4.Add (this.fileEntry);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.fileEntry]));
			w5.Position = 1;
			// Container child hbox4.Gtk.Box+BoxChild
			this.fileButton = new global::Gtk.Button ();
			this.fileButton.CanFocus = true;
			this.fileButton.Name = "fileButton";
			// Container child fileButton.Gtk.Container+ContainerChild
			this.image3 = new global::Gtk.Image ();
			this.image3.Name = "image3";
			this.image3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-open", global::Gtk.IconSize.Menu);
			this.fileButton.Add (this.image3);
			this.hbox4.Add (this.fileButton);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox4 [this.fileButton]));
			w7.Position = 2;
			w7.Expand = false;
			w7.Fill = false;
			this.vbox3.Add (this.hbox4);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hbox4]));
			w8.Position = 1;
			w8.Expand = false;
			w8.Fill = false;
			this.Add (this.vbox3);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}


// This file has been generated by the GUI designer. Do not modify.
namespace ocmgtk
{
	public partial class DeLormeWidget
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.CheckButton attrCheck;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.Image image3;
		
		private global::Gtk.Button button19;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.CheckButton limitCheck;
		
		private global::Gtk.Entry limitEntry;
		
		private global::Gtk.CheckButton logCheck;
		
		private global::Gtk.Entry logEntry;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget ocmgtk.DeLormeWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "ocmgtk.DeLormeWidget";
			// Container child ocmgtk.DeLormeWidget.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.attrCheck = new global::Gtk.CheckButton ();
			this.attrCheck.CanFocus = true;
			this.attrCheck.Name = "attrCheck";
			this.attrCheck.Label = global::Mono.Unix.Catalog.GetString ("Include Attributes in Description");
			this.attrCheck.Active = true;
			this.attrCheck.DrawIndicator = true;
			this.attrCheck.UseUnderline = true;
			this.table1.Add (this.attrCheck);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.attrCheck]));
			w1.TopAttach = ((uint)(2));
			w1.BottomAttach = ((uint)(3));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.image3 = new global::Gtk.Image ();
			this.image3.Name = "image3";
			this.image3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-warning", global::Gtk.IconSize.Menu);
			this.hbox1.Add (this.image3);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.image3]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.button19 = new global::Gtk.Button ();
			this.button19.CanFocus = true;
			this.button19.Name = "button19";
			this.button19.Relief = ((global::Gtk.ReliefStyle)(2));
			// Container child button19.Gtk.Container+ContainerChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Important:</b>DeLorme USB format is only available in GPSBabel 1.4");
			this.label1.UseMarkup = true;
			this.button19.Add (this.label1);
			this.hbox1.Add (this.button19);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.button19]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			this.table1.Add (this.hbox1);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.hbox1]));
			w5.TopAttach = ((uint)(3));
			w5.BottomAttach = ((uint)(4));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(0));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitCheck = new global::Gtk.CheckButton ();
			this.limitCheck.CanFocus = true;
			this.limitCheck.Name = "limitCheck";
			this.limitCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Geocaches");
			this.limitCheck.Active = true;
			this.limitCheck.DrawIndicator = true;
			this.limitCheck.UseUnderline = true;
			this.table1.Add (this.limitCheck);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitCheck]));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.limitEntry = new global::Gtk.Entry ();
			this.limitEntry.CanFocus = true;
			this.limitEntry.Name = "limitEntry";
			this.limitEntry.Text = global::Mono.Unix.Catalog.GetString ("1000");
			this.limitEntry.IsEditable = true;
			this.limitEntry.InvisibleChar = '•';
			this.table1.Add (this.limitEntry);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.limitEntry]));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.logCheck = new global::Gtk.CheckButton ();
			this.logCheck.CanFocus = true;
			this.logCheck.Name = "logCheck";
			this.logCheck.Label = global::Mono.Unix.Catalog.GetString ("Limit Number of Logs");
			this.logCheck.DrawIndicator = true;
			this.logCheck.UseUnderline = true;
			this.table1.Add (this.logCheck);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.logCheck]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.logEntry = new global::Gtk.Entry ();
			this.logEntry.CanFocus = true;
			this.logEntry.Name = "logEntry";
			this.logEntry.Text = global::Mono.Unix.Catalog.GetString ("5");
			this.logEntry.IsEditable = true;
			this.logEntry.InvisibleChar = '•';
			this.table1.Add (this.logEntry);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.logEntry]));
			w9.TopAttach = ((uint)(1));
			w9.BottomAttach = ((uint)(2));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.button19.Clicked += new global::System.EventHandler (this.OnHotplugClick);
		}
	}
}
